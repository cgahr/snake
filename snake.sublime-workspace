{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"dire",
				"direction"
			],
			[
				"opp",
				"opposite"
			],
			[
				"direc",
				"directions"
			],
			[
				"se",
				"search_best_direction"
			],
			[
				"sna",
				"snake_ai"
			],
			[
				"Snak",
				"SnakeAI"
			],
			[
				"_",
				"_directions"
			],
			[
				"c",
				"content_filter"
			],
			[
				"get",
				"get_neighbors"
			],
			[
				"boa",
				"board_size"
			],
			[
				"GR",
				"GREY"
			],
			[
				"W",
				"WINSIZE"
			],
			[
				"ini",
				"init_snake"
			],
			[
				"draw",
				"draw_board"
			],
			[
				"F",
				"FIELD_PX"
			],
			[
				"Fi",
				"FieldContent"
			],
			[
				"Fiel",
				"FieldContent"
			],
			[
				"Fil",
				"FieldContent"
			],
			[
				"burgersequation_per",
				"../data/burgersequation_periodic_normal.nc"
			],
			[
				"key",
				"key_data"
			],
			[
				"train",
				"train_size"
			],
			[
				"pr",
				"projection"
			],
			[
				"set",
				"set_yscale"
			],
			[
				"ERR",
				"ERRORS"
			],
			[
				"error",
				"parse_errors_from_hdf5"
			],
			[
				"bbox",
				"bbox_to_anchor"
			],
			[
				"temp",
				"temporal_grid"
			],
			[
				"impl",
				"implementation"
			],
			[
				"set_",
				"set_palette"
			],
			[
				"sty",
				"linestyles="
			],
			[
				"dim",
				"dimstr="
			],
			[
				"singular",
				"singular_values"
			],
			[
				"sin",
				"singular_values"
			],
			[
				"burg",
				"../data/burgersequation_periodic_normal.nc"
			],
			[
				"meta",
				"meta_str"
			],
			[
				"HD",
				"HDF5S"
			],
			[
				"H",
				"HDF5S"
			],
			[
				"sing",
				"singular_values"
			],
			[
				"Opt",
				"Optional"
			],
			[
				"fl",
				"flatten"
			],
			[
				"ele",
				"elements"
			],
			[
				"include",
				"\\includegraphics[options]{name}                   "
			],
			[
				"foo",
				"\\footnote{text}                                   "
			],
			[
				"burgersequation_",
				"../data/burgersequation_1627381155.nc"
			],
			[
				"burgersequation_periodic_162737",
				"../data/burgersequation_periodic_1627379246.nc"
			],
			[
				"burgersequation_periodic_16273",
				"../data/burgersequation_periodic_1627379104.nc"
			],
			[
				"burgersequation_periodic_162736",
				"../data/burgersequation_periodic_1627369052.nc"
			],
			[
				"burgersequation_periodic_1627368",
				"../data/burgersequation_periodic_1627368943.nc"
			],
			[
				"burgersequation_periodic_16",
				"../data/burgersequation_periodic_1627368184.nc"
			],
			[
				"TEMP",
				"TEMPORAL_GRID"
			],
			[
				"TEMPOR",
				"TEMPORAL_GRID_SIZE"
			],
			[
				"SPATIA",
				"SPATIAL_DOMAIN"
			],
			[
				"INI",
				"INITIAL_CONDITION"
			],
			[
				"SPA",
				"SPATIAL_GRID"
			],
			[
				"TEM",
				"TEMPORAL_RESOLUTION"
			],
			[
				"SP",
				"SPATIAL_RESOLUTION"
			],
			[
				"omega",
				"\\omega                                            "
			],
			[
				"sqrt",
				"\\sqrt{arg}                                        "
			],
			[
				"subsubsec",
				"\\subsubsection{title}                             "
			],
			[
				"input",
				"\\input{file}                                      "
			],
			[
				"DE",
				"DELTA_X"
			],
			[
				"indi",
				"indicators"
			],
			[
				"A",
				"A_advc"
			],
			[
				"err",
				"error_random_params"
			],
			[
				"erros",
				"errors"
			],
			[
				"sigma",
				"\\sigma                                            "
			],
			[
				"sigm",
				"\\sigma                                            "
			],
			[
				"subsub",
				"\\subsubsection*{title}                            "
			],
			[
				"ax",
				"ax_iter"
			],
			[
				"ti",
				"tight_layout"
			],
			[
				"DELTA",
				"DELTA_X"
			],
			[
				"float",
				"float64"
			],
			[
				"u_",
				"u_analytical"
			],
			[
				"uni",
				"uniform_grid"
			],
			[
				"num",
				"num_spectral"
			],
			[
				"spec",
				"spectral_scheme"
			],
			[
				"sey",
				"set_ylabel"
			],
			[
				"lax",
				"lax_wendroff_scheme"
			],
			[
				"im",
				"imshow"
			],
			[
				"column",
				"columns="
			],
			[
				"en",
				"endpoint="
			],
			[
				"f",
				"f_0"
			],
			[
				"E",
				"E_analytical"
			],
			[
				"n",
				"n_i"
			],
			[
				"l_",
				"linf_norm"
			],
			[
				"DEL",
				"DELTA_T"
			],
			[
				"perio",
				"periodic_fourier"
			],
			[
				"cond",
				"condition"
			],
			[
				"sol",
				"solution"
			],
			[
				"solv",
				"solver_dirichlet"
			],
			[
				"col",
				"col_wrap="
			],
			[
				"l",
				"l_1"
			],
			[
				"s",
				"system_matrix"
			],
			[
				"sys",
				"system_matrix"
			],
			[
				"N",
				"N_COMPONENTS"
			],
			[
				"bb",
				"bbox_to_anchor"
			],
			[
				"_fnid",
				"_find_best_position"
			],
			[
				"le",
				"get_legend_handles_labels"
			],
			[
				"y",
				"y_pred"
			],
			[
				"alpha",
				"alpha2\t⟠"
			],
			[
				"alp",
				"alpha1"
			],
			[
				"O",
				"OperatorInferencePipelineDegree2\ttype ⟠"
			],
			[
				"tr",
				"train_split\tfunction ⟠"
			],
			[
				"tra",
				"train_split(…)\tfunction ⟠"
			],
			[
				"mas",
				"mask = mask\t1★ pro ⟠"
			],
			[
				"pro",
				"projection\tinstance"
			],
			[
				"best",
				"best_params\tinstance"
			],
			[
				"best_",
				"best_score\t⟠"
			],
			[
				"sub",
				"subplots\tfunction"
			],
			[
				"tril",
				"trials_dataframe\tfunction"
			],
			[
				"sort",
				"sort_values(…)\tfunction ⟠"
			],
			[
				"param",
				"param_alpha1"
			],
			[
				"params",
				"params_alpha1"
			],
			[
				"tri",
				"trials_dataframe"
			],
			[
				"tight",
				"tight_layout\tfunction"
			],
			[
				"plot_",
				"plot_edf\tfunction"
			],
			[
				"trial",
				"trials_dataframe\tfunction"
			],
			[
				"Oper",
				"OperatorInferencePipelineDegree2\tclass"
			],
			[
				"X_pred",
				"X_pred_test\t⟠"
			],
			[
				"mean",
				"mean_absolute_percentage_error\tfunction"
			],
			[
				"fig",
				"figsize=\tparam"
			],
			[
				"arg",
				"argmin\tfunction"
			],
			[
				"samp",
				"sample_bounds\t⟠"
			],
			[
				"self",
				"self, *args\t3★ pro ⟠"
			],
			[
				"gif",
				"gif_df2\tinstance"
			],
			[
				"mean_test",
				"mean_test_mape\tinstance"
			],
			[
				"para",
				"param_alpha2"
			],
			[
				"bo",
				"bo_cv\tinstance"
			]
		]
	},
	"buffers":
	[
		{
			"file": "environment.yml",
			"settings":
			{
				"buffer_size": 95,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					4,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAnQIAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					7,
					1,
					"left_delete",
					null,
					"AQAAAEAAAAAAAAAAQAAAAAAAAADoAAAACiAgLSBuYl9jb25kYQogIC0gaXB5a2VybmVsCiAgLSBudW1weT49MS4yMC4wCiAgLSBqZWRpPj0wLjE4LjAKICAtIHNjaWtpdC1sZWFybj0wLjI0LjIKICAtIHNjaWtpdC1vcHRpbWl6ZQogIC0geGFycmF5CiAgLSBtYXRwbG90bGliCiAgLSBweXRlc3QKICAtIGlzb3J0CiAgLSBteXB5CiAgLSBweWxpbnQKICAtIHNlYWJvcm4KICAtIGNtYWVzCiAgLSBvcHR1bmEKICAtIGp1cHl0ZXh0CiAgLSBweXRhYmxlcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAAAAAAAAAAKAEAAAAAAAAAAAAAAADwvw"
				],
				[
					10,
					1,
					"right_delete",
					null,
					"AQAAAFEAAAAAAAAAUQAAAAAAAABjAQAACiAgICAtIHNjaXB5Pj0xLjcuMAogICAgLSBnaWYKICAgIC0gcHl0ZXN0LW1vY2sKICAgIC0gcHl0ZXN0LWVudgogICAgLSBweXRlc3QtY292CiAgICAtIGNvdmVyYWdlCiAgICAtIGJsYWNrCiAgICAtIGp1cHl0ZXJ0aGVtZXMKICAgIC0gcHJlLWNvbW1pdAogICAgLSBpbWFnZWlvCiAgICAtIGltYWdlaW8tZmZtcGVnCiAgICAtIG9wdHVuYQogICAgLSByb20tb3BlcmF0b3ItbmlmZXJlbmNlCiAgICAtIGNsaWNrCiAgICAtIHB5Y29kZXN0eWxlCiAgICAtIGZsYWtlOAogICAgLSBmbGFrZTgtYmFuZGl0CiAgICAtIGZsYWtlOC1idWdiZWFyCiAgICAtIGZsYWtlOC1jb21wcmVoZW5zaW9ucwogICAgLSBqYXgKICAgIC0gZmxheA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEAAAAAAAAAtAEAAAAAAAAAAAAAAADwvw"
				],
				[
					11,
					1,
					"left_delete",
					null,
					"AQAAAFAAAAAAAAAAUAAAAAAAAAABAAAAOg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEAAAAAAAAAUQAAAAAAAAAAAAAAAADwvw"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABTAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAADwvw"
				],
				[
					13,
					2,
					"left_delete",
					null,
					"AgAAAFEAAAAAAAAAUQAAAAAAAAACAAAAICBQAAAAAAAAAFAAAAAAAAAAAQAAAAo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMAAAAAAAAAUwAAAAAAAAAAAAAAAADwvw"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": ":L"
					},
					"AgAAAFAAAAAAAAAAUQAAAAAAAAAAAAAAUQAAAAAAAABSAAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFAAAAAAAAAAUAAAAAAAAAAAAAAAAADwvw"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAAFEAAAAAAAAAUQAAAAAAAAABAAAATA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIAAAAAAAAAUgAAAAAAAAAAAAAAAADwvw"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "\np"
					},
					"BAAAAFEAAAAAAAAAUgAAAAAAAAAAAAAAUgAAAAAAAABUAAAAAAAAAAAAAABUAAAAAAAAAFYAAAAAAAAAAAAAAFYAAAAAAAAAVwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEAAAAAAAAAUQAAAAAAAAAAAAAAAADwvw"
				],
				[
					17,
					1,
					"left_delete",
					null,
					"AQAAAFYAAAAAAAAAVgAAAAAAAAABAAAAcA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcAAAAAAAAAVwAAAAAAAAAAAAAAAADwvw"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAFYAAAAAAAAAVwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYAAAAAAAAAVgAAAAAAAAAAAAAAAADwvw"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " pyhame"
					},
					"BwAAAFcAAAAAAAAAWAAAAAAAAAAAAAAAWAAAAAAAAABZAAAAAAAAAAAAAABZAAAAAAAAAFoAAAAAAAAAAAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcAAAAAAAAAVwAAAAAAAAAAAAAAAADwvw"
				],
				[
					20,
					4,
					"left_delete",
					null,
					"BAAAAF0AAAAAAAAAXQAAAAAAAAABAAAAZVwAAAAAAAAAXAAAAAAAAAABAAAAbVsAAAAAAAAAWwAAAAAAAAABAAAAYVoAAAAAAAAAWgAAAAAAAAABAAAAaA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAF4AAAAAAAAAXgAAAAAAAAAAAAAAAADwvw"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "game"
					},
					"BAAAAFoAAAAAAAAAWwAAAAAAAAAAAAAAWwAAAAAAAABcAAAAAAAAAAAAAABcAAAAAAAAAF0AAAAAAAAAAAAAAF0AAAAAAAAAXgAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoAAAAAAAAAWgAAAAAAAAAAAAAAAADwvw"
				],
				[
					29,
					1,
					"insert",
					{
						"characters": "snake"
					},
					"BgAAAAYAAAAAAAAABwAAAAAAAAAAAAAABwAAAAAAAAAHAAAAAAAAAAUAAABvcEluZgcAAAAAAAAACAAAAAAAAAAAAAAACAAAAAAAAAAJAAAAAAAAAAAAAAAJAAAAAAAAAAoAAAAAAAAAAAAAAAoAAAAAAAAACwAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAYAAAAAAAAACwAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "snake.sublime-project",
			"settings":
			{
				"buffer_size": 47,
				"line_ending": "Unix"
			}
		},
		{
			"file": "snake/main.py",
			"settings":
			{
				"buffer_size": 9233,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					13033,
					1,
					"insert",
					{
						"characters": "File"
					},
					"BQAAAJ0OAAAAAAAAng4AAAAAAAAAAAAAng4AAAAAAACeDgAAAAAAABoAAABsaXN0KHNlbGYpW2xlbihzZWxmKSAvLyAyXZ4OAAAAAAAAnw4AAAAAAAAAAAAAnw4AAAAAAACgDgAAAAAAAAAAAACgDgAAAAAAAKEOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0OAAAAAAAAtw4AAAAAAAAAAAAAAADwvw"
				],
				[
					13034,
					2,
					"left_delete",
					null,
					"AgAAAKAOAAAAAAAAoA4AAAAAAAABAAAAZZ8OAAAAAAAAnw4AAAAAAAABAAAAbA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKEOAAAAAAAAoQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13035,
					1,
					"insert",
					{
						"characters": "eld()"
					},
					"BQAAAJ8OAAAAAAAAoA4AAAAAAAAAAAAAoA4AAAAAAAChDgAAAAAAAAAAAAChDgAAAAAAAKIOAAAAAAAAAAAAAKIOAAAAAAAAow4AAAAAAAAAAAAAow4AAAAAAACkDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8OAAAAAAAAnw4AAAAAAAAAAAAAAADwvw"
				],
				[
					13037,
					1,
					"insert",
					{
						"characters": "self.shape"
					},
					"CgAAAKMOAAAAAAAApA4AAAAAAAAAAAAApA4AAAAAAAClDgAAAAAAAAAAAAClDgAAAAAAAKYOAAAAAAAAAAAAAKYOAAAAAAAApw4AAAAAAAAAAAAApw4AAAAAAACoDgAAAAAAAAAAAACoDgAAAAAAAKkOAAAAAAAAAAAAAKkOAAAAAAAAqg4AAAAAAAAAAAAAqg4AAAAAAACrDgAAAAAAAAAAAACrDgAAAAAAAKwOAAAAAAAAAAAAAKwOAAAAAAAArQ4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMOAAAAAAAAow4AAAAAAAAAAAAAAADwvw"
				],
				[
					13038,
					1,
					"insert",
					{
						"characters": "[0]"
					},
					"AwAAAK0OAAAAAAAArg4AAAAAAAAAAAAArg4AAAAAAACvDgAAAAAAAAAAAACvDgAAAAAAALAOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0OAAAAAAAArQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13039,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAALAOAAAAAAAAsQ4AAAAAAAAAAAAAsQ4AAAAAAACyDgAAAAAAAAAAAACyDgAAAAAAALMOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALAOAAAAAAAAsA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13040,
					1,
					"insert",
					{
						"characters": " 2,"
					},
					"AwAAALMOAAAAAAAAtA4AAAAAAAAAAAAAtA4AAAAAAAC1DgAAAAAAAAAAAAC1DgAAAAAAALYOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMOAAAAAAAAsw4AAAAAAAAAAAAAAADwvw"
				],
				[
					13041,
					1,
					"insert",
					{
						"characters": " se;"
					},
					"BAAAALYOAAAAAAAAtw4AAAAAAAAAAAAAtw4AAAAAAAC4DgAAAAAAAAAAAAC4DgAAAAAAALkOAAAAAAAAAAAAALkOAAAAAAAAug4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALYOAAAAAAAAtg4AAAAAAAAAAAAAAADwvw"
				],
				[
					13042,
					1,
					"left_delete",
					null,
					"AQAAALkOAAAAAAAAuQ4AAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoOAAAAAAAAug4AAAAAAAAAAAAAAADwvw"
				],
				[
					13043,
					1,
					"insert",
					{
						"characters": "lf.sha[e"
					},
					"CAAAALkOAAAAAAAAug4AAAAAAAAAAAAAug4AAAAAAAC7DgAAAAAAAAAAAAC7DgAAAAAAALwOAAAAAAAAAAAAALwOAAAAAAAAvQ4AAAAAAAAAAAAAvQ4AAAAAAAC+DgAAAAAAAAAAAAC+DgAAAAAAAL8OAAAAAAAAAAAAAL8OAAAAAAAAwA4AAAAAAAAAAAAAwA4AAAAAAADBDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALkOAAAAAAAAuQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13044,
					2,
					"left_delete",
					null,
					"AgAAAMAOAAAAAAAAwA4AAAAAAAABAAAAZb8OAAAAAAAAvw4AAAAAAAABAAAAWw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMEOAAAAAAAAwQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13045,
					1,
					"insert",
					{
						"characters": "pe[1]"
					},
					"BQAAAL8OAAAAAAAAwA4AAAAAAAAAAAAAwA4AAAAAAADBDgAAAAAAAAAAAADBDgAAAAAAAMIOAAAAAAAAAAAAAMIOAAAAAAAAww4AAAAAAAAAAAAAww4AAAAAAADEDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL8OAAAAAAAAvw4AAAAAAAAAAAAAAADwvw"
				],
				[
					13046,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAAMQOAAAAAAAAxQ4AAAAAAAAAAAAAxQ4AAAAAAADGDgAAAAAAAAAAAADGDgAAAAAAAMcOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQOAAAAAAAAxA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13047,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAMcOAAAAAAAAyA4AAAAAAAAAAAAAyA4AAAAAAADJDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcOAAAAAAAAxw4AAAAAAAAAAAAAAADwvw"
				],
				[
					13055,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAACoOAAAAAAAALA4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIOAAAAAAAAQg4AAAAAAAAAAAAAAADwvw"
				],
				[
					13056,
					1,
					"insert",
					{
						"characters": "\napple"
					},
					"BwAAAEQOAAAAAAAARQ4AAAAAAAAAAAAARQ4AAAAAAABNDgAAAAAAAAAAAABNDgAAAAAAAE4OAAAAAAAAAAAAAE4OAAAAAAAATw4AAAAAAAAAAAAATw4AAAAAAABQDgAAAAAAAAAAAABQDgAAAAAAAFEOAAAAAAAAAAAAAFEOAAAAAAAAUg4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQOAAAAAAAARA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13057,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAFIOAAAAAAAAUw4AAAAAAAAAAAAAUw4AAAAAAABUDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIOAAAAAAAAUg4AAAAAAAAAAAAAAADwvw"
				],
				[
					13058,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFQOAAAAAAAAVQ4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFQOAAAAAAAAVA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13059,
					1,
					"insert",
					{
						"characters": "Field"
					},
					"BQAAAFUOAAAAAAAAVg4AAAAAAAAAAAAAVg4AAAAAAABXDgAAAAAAAAAAAABXDgAAAAAAAFgOAAAAAAAAAAAAAFgOAAAAAAAAWQ4AAAAAAAAAAAAAWQ4AAAAAAABaDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFUOAAAAAAAAVQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13060,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAFoOAAAAAAAAWw4AAAAAAAAAAAAAWw4AAAAAAABcDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFoOAAAAAAAAWg4AAAAAAAAAAAAAAADwvw"
				],
				[
					13062,
					1,
					"insert",
					{
						"characters": "self.s"
					},
					"BgAAAFsOAAAAAAAAXA4AAAAAAAAAAAAAXA4AAAAAAABdDgAAAAAAAAAAAABdDgAAAAAAAF4OAAAAAAAAAAAAAF4OAAAAAAAAXw4AAAAAAAAAAAAAXw4AAAAAAABgDgAAAAAAAAAAAABgDgAAAAAAAGEOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFsOAAAAAAAAWw4AAAAAAAAAAAAAAADwvw"
				],
				[
					13063,
					1,
					"insert_completion",
					{
						"completion": "shape",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "shape"
					},
					"AgAAAGAOAAAAAAAAYA4AAAAAAAABAAAAc2AOAAAAAAAAZQ4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEOAAAAAAAAYQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13064,
					1,
					"insert",
					{
						"characters": "[0]"
					},
					"AwAAAGUOAAAAAAAAZg4AAAAAAAAAAAAAZg4AAAAAAABnDgAAAAAAAAAAAABnDgAAAAAAAGgOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUOAAAAAAAAZQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13065,
					1,
					"insert",
					{
						"characters": " //"
					},
					"AwAAAGgOAAAAAAAAaQ4AAAAAAAAAAAAAaQ4AAAAAAABqDgAAAAAAAAAAAABqDgAAAAAAAGsOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGgOAAAAAAAAaA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13066,
					1,
					"insert",
					{
						"characters": " 2"
					},
					"AgAAAGsOAAAAAAAAbA4AAAAAAAAAAAAAbA4AAAAAAABtDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsOAAAAAAAAaw4AAAAAAAAAAAAAAADwvw"
				],
				[
					13067,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAG0OAAAAAAAAbg4AAAAAAAAAAAAAbg4AAAAAAABvDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG0OAAAAAAAAbQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13068,
					1,
					"left_delete",
					null,
					"AQAAAG4OAAAAAAAAbg4AAAAAAAABAAAAPQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8OAAAAAAAAbw4AAAAAAAAAAAAAAADwvw"
				],
				[
					13069,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAG4OAAAAAAAAbw4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4OAAAAAAAAbg4AAAAAAAAAAAAAAADwvw"
				],
				[
					13070,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAAG8OAAAAAAAAcA4AAAAAAAAAAAAAcA4AAAAAAABxDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8OAAAAAAAAbw4AAAAAAAAAAAAAAADwvw"
				],
				[
					13073,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAHEOAAAAAAAAcg4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEOAAAAAAAAcQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13074,
					1,
					"insert",
					{
						"characters": " self.sha"
					},
					"CQAAAHIOAAAAAAAAcw4AAAAAAAAAAAAAcw4AAAAAAAB0DgAAAAAAAAAAAAB0DgAAAAAAAHUOAAAAAAAAAAAAAHUOAAAAAAAAdg4AAAAAAAAAAAAAdg4AAAAAAAB3DgAAAAAAAAAAAAB3DgAAAAAAAHgOAAAAAAAAAAAAAHgOAAAAAAAAeQ4AAAAAAAAAAAAAeQ4AAAAAAAB6DgAAAAAAAAAAAAB6DgAAAAAAAHsOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHIOAAAAAAAAcg4AAAAAAAAAAAAAAADwvw"
				],
				[
					13075,
					1,
					"insert_completion",
					{
						"completion": "shape",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "shape"
					},
					"AgAAAHgOAAAAAAAAeA4AAAAAAAADAAAAc2hheA4AAAAAAAB9DgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHsOAAAAAAAAew4AAAAAAAAAAAAAAADwvw"
				],
				[
					13076,
					1,
					"insert",
					{
						"characters": "[1]"
					},
					"AwAAAH0OAAAAAAAAfg4AAAAAAAAAAAAAfg4AAAAAAAB/DgAAAAAAAAAAAAB/DgAAAAAAAIAOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0OAAAAAAAAfQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13077,
					1,
					"insert",
					{
						"characters": " //2"
					},
					"BAAAAIAOAAAAAAAAgQ4AAAAAAAAAAAAAgQ4AAAAAAACCDgAAAAAAAAAAAACCDgAAAAAAAIMOAAAAAAAAAAAAAIMOAAAAAAAAhA4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIAOAAAAAAAAgA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13078,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIQOAAAAAAAAhQ4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQOAAAAAAAAhA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13081,
					1,
					"black_file",
					null,
					"AQAAAAAAAAAAAAAATCIAAAAAAABMIgAAIyEvdXNyL2Jpbi9lbnYgcHl0aG9uCmltcG9ydCByYW5kb20KaW1wb3J0IG1hdGgKaW1wb3J0IHB5Z2FtZSBhcyBwZwppbXBvcnQgZW51bQppbXBvcnQgcGRiCmZyb20gY29sbGVjdGlvbnMgaW1wb3J0IGRlcXVlCmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbiwgT3B0aW9uYWwsIEl0ZXJhYmxlCmltcG9ydCB0aW1lCgojIGNvbnN0YW50cwpCT0FSRF9TSVpFID0gKDQwLCAyMCkKRklFTERfUFggPSAzMApHQVBfUFggPSA1CkJPUkRFUl9QWCA9IDEwMApXSU5TSVpFID0gdHVwbGUoCiAgICBtYXAobGFtYmRhIHg6IHggKiBGSUVMRF9QWCArICh4IC0gMSkgKiBHQVBfUFggKyAyICogQk9SREVSX1BYLCBCT0FSRF9TSVpFKQopCgpGUkFNRVNfUEVSX01PVkUgPSAxCgoKY2xhc3MgQ29sb3IoZW51bS5FbnVtKToKICAgIEdSRUVOID0gMCwgMjU1LCAwCiAgICBHUkVZID0gMzIsIDMyLCAzMgogICAgQkxBQ0sgPSAwLCAwLCAwCiAgICBSRUQgPSAyNTUsIDAsIDAKICAgIExJR0hUR1JFWSA9IDEwMCwgMTAwLCAxMDAKCgpjbGFzcyBXaW5FcnJvcihFeGNlcHRpb24pOgogICAgcGFzcwoKCmNsYXNzIExvc2VFcnJvcihFeGNlcHRpb24pOgogICAgcGFzcwoKCmNsYXNzIEFwcGxlRm91bmRFcnJvcihFeGNlcHRpb24pOgogICAgcGFzcwoKCmNsYXNzIERpcmVjdGlvbihlbnVtLkVudW0pOgogICAgUklHSFQgPSAoMSwgMCkKICAgIExFRlQgPSAoLTEsIDApCiAgICBVUCA9ICgwLCAxKQogICAgRE9XTiA9ICgwLCAtMSkKCiAgICAjIGRlZiBfX2FkZF9fKHNlbGYsIG90aGVyKSAtPiB0dXBsZVtpbnQsIGludF06CiAgICAjICAgICByZXR1cm4gKHNlbGYudmFsdWVbMF0gKyBvdGhlci52YWx1ZVswXSwgc2VsZi52YWx1ZVsxXSArIG90aGVyLnZhbHVlWzFdKQoKICAgIGRlZiBvcHBvc2l0ZShzZWxmKToKICAgICAgICByZXR1cm4gRGlyZWN0aW9uKCgtc2VsZi52YWx1ZVswXSwgLXNlbGYudmFsdWVbMV0pKQoKCmNsYXNzIENvbnRlbnQoZW51bS5FbnVtKToKICAgIEVNUFRZID0gZW51bS5hdXRvKCkKICAgIFNOQUtFID0gZW51bS5hdXRvKCkKICAgIEFQUExFID0gZW51bS5hdXRvKCkKCgpjbGFzcyBGaWVsZDoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCB4OiBpbnQsIHk6IGludCk6CiAgICAgICAgc2VsZi54ID0geAogICAgICAgIHNlbGYueSA9IHkKICAgICAgICBzZWxmLl9yZWN0ID0gTm9uZQoKICAgIGRlZiBfX2VxX18oc2VsZiwgb3RoZXIpOgogICAgICAgIHJldHVybiAoc2VsZi54ID09IG90aGVyLngpIGFuZCAoc2VsZi55ID09IG90aGVyLnkpCgogICAgZGVmIF9fc3ViX18oc2VsZiwgb3RoZXI6IERpcmVjdGlvbik6CiAgICAgICAgaWYgbm90IGlzaW5zdGFuY2Uob3RoZXIsIERpcmVjdGlvbik6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoIllvdSBjYW4gb25seSBzdWJ0cmFjdCAnRGlyZWN0aW9uJyBmcm9tICdGaWVsZCchIikKCiAgICAgICAgcmV0dXJuIEZpZWxkKHNlbGYueCAtIG90aGVyLnZhbHVlWzBdLCBzZWxmLnkgLSBvdGhlci52YWx1ZVsxXSkKCiAgICBkZWYgX19hZGRfXyhzZWxmLCBvdGhlcjogRGlyZWN0aW9uKToKICAgICAgICBpZiBub3QgaXNpbnN0YW5jZShvdGhlciwgRGlyZWN0aW9uKToKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcigiWW91IGNhbiBvbmx5IGFkZCAnRGlyZWN0aW9uJyB0byAnRmllbGQnISIpCgogICAgICAgIHJldHVybiBGaWVsZChzZWxmLnggKyBvdGhlci52YWx1ZVswXSwgc2VsZi55ICsgb3RoZXIudmFsdWVbMV0pCgogICAgZGVmIF9faGFzaF9fKHNlbGYpOgogICAgICAgIHJldHVybiBoYXNoKChzZWxmLngsIHNlbGYueSkpCgogICAgZGVmIF9fc3RyX18oc2VsZik6CiAgICAgICAgcmV0dXJuIGYiRmllbGQoeD17c2VsZi54fSwgeT17c2VsZi55fSkiCgogICAgZGVmIGRpc3Qoc2VsZiwgb3RoZXIpOgogICAgICAgIHJldHVybiBhYnMoc2VsZi54IC0gb3RoZXIueCkgKyBhYnMoc2VsZi55IC0gb3RoZXIueSkKCiAgICBAcHJvcGVydHkKICAgIGRlZiByZWN0KHNlbGYpIC0+IHBnLlJlY3Q6CiAgICAgICAgaWYgc2VsZi5fcmVjdCBpcyBOb25lOgogICAgICAgICAgICBsZWZ0ID0gQk9SREVSX1BYICsgc2VsZi54ICogRklFTERfUFggKyBzZWxmLnggKiBHQVBfUFgKICAgICAgICAgICAgdG9wID0gV0lOU0laRVsxXSAtIEJPUkRFUl9QWCAtICgoc2VsZi55ICsgMSkgKiBGSUVMRF9QWCArIHNlbGYueSAqIEdBUF9QWCkKICAgICAgICAgICAgd2lkdGggPSBGSUVMRF9QWAogICAgICAgICAgICBoZWlnaHQgPSBGSUVMRF9QWAogICAgICAgICAgICBzZWxmLl9yZWN0ID0gcGcuUmVjdChsZWZ0LCB0b3AsIHdpZHRoLCBoZWlnaHQpCiAgICAgICAgcmV0dXJuIHNlbGYuX3JlY3QKCgpjbGFzcyBTbmFrZShkZXF1ZSk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgcG9zOiBGaWVsZCwgZGlyZWN0aW9uOiBEaXJlY3Rpb24gPSBEaXJlY3Rpb24uTEVGVCk6CiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyhbcG9zLCBwb3MgLSBkaXJlY3Rpb25dKQogICAgICAgIHNlbGYuZGlyZWN0aW9uID0gZGlyZWN0aW9uCgogICAgZGVmIF9faXRlcihzZWxmKToKICAgICAgICBzdXBlcigpLl9faXRlcl9fKCkKCiAgICBkZWYgbW92ZShzZWxmKSAtPiB0dXBsZVtGaWVsZCwgRmllbGRdOgogICAgICAgIGZpZWxkID0gc2VsZi5uZXh0X2ZpZWxkKCkKICAgICAgICBpZiBmaWVsZCBpbiBzZWxmOgogICAgICAgICAgICByYWlzZSBMb3NlRXJyb3IKCiAgICAgICAgc2VsZi5hcHBlbmRsZWZ0KGZpZWxkKQogICAgICAgIGVtcHR5ID0gc2VsZi5wb3AoKQogICAgICAgIHJldHVybiBmaWVsZCwgZW1wdHkKCiAgICBkZWYgZ3JvdyhzZWxmKSAtPiBGaWVsZDoKICAgICAgICBmaWVsZCA9IHNlbGYubmV4dF9maWVsZCgpCiAgICAgICAgc2VsZi5hcHBlbmRsZWZ0KGZpZWxkKQogICAgICAgIHJldHVybiBmaWVsZAoKICAgIGRlZiBuZXh0X2ZpZWxkKHNlbGYpIC0+IEZpZWxkOgogICAgICAgIHJldHVybiBzZWxmLmhlYWQgKyBzZWxmLmRpcmVjdGlvbgoKICAgIEBwcm9wZXJ0eQogICAgZGVmIGhlYWQoc2VsZikgLT4gRmllbGQ6CiAgICAgICAgcmV0dXJuIHNlbGZbMF0KCiAgICBkZWYgdHVybihzZWxmLCBkaXJlY3Rpb246IE9wdGlvbmFsW0RpcmVjdGlvbl0pOgogICAgICAgIGlmIChkaXJlY3Rpb24gaXMgbm90IE5vbmUpIGFuZCAoc2VsZi5kaXJlY3Rpb24ub3Bwb3NpdGUoKSAhPSBkaXJlY3Rpb24pOgogICAgICAgICAgICBzZWxmLmRpcmVjdGlvbiA9IGRpcmVjdGlvbgoKICAgIGRlZiBhZG1pc3NpYmxlX2RpcmVjdGlvbnMoc2VsZik6CiAgICAgICAgcGFzcwoKCmNsYXNzIEJvYXJkKGRpY3QpOgogICAgYXBwbGU6IEZpZWxkCiAgICBzbmFrZTogU25ha2UKCiAgICBkZWYgX19pbml0X18oc2VsZiwgc2hhcGU6IHR1cGxlW2ludCwgaW50XSk6CiAgICAgICAgc2VsZi5zaGFwZSA9IHNoYXBlCgogICAgICAgIHN1cGVyKCkuX19pbml0X18oCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIEZpZWxkKHgsIHkpOiBDb250ZW50LkVNUFRZCiAgICAgICAgICAgICAgICBmb3IgeCBpbiByYW5nZShzaGFwZVswXSkKICAgICAgICAgICAgICAgIGZvciB5IGluIHJhbmdlKHNoYXBlWzFdKQogICAgICAgICAgICB9CiAgICAgICAgKQoKICAgICAgICBzZWxmLmluaXRfc25ha2UoKQoKICAgICAgICAjIGFwcGxlID0gc2VsZi5uZXdfYXBwbGUoKQogICAgICAgIGFwcGxlID0gRmllbGQoc2VsZi5zaGFwZVswXSAvLyAyICsgMywgc2VsZi5zaGFwZVsxXSAvLzIgKQogICAgICAgIHNlbGZbYXBwbGVdID0gQ29udGVudC5BUFBMRQoKICAgIGRlZiBpbml0X3NuYWtlKHNlbGYpOgogICAgICAgIHNlbGYuc25ha2UgPSBTbmFrZShGaWVsZChzZWxmLnNoYXBlWzBdIC8vIDIsIHNlbGYuc2hhcGVbMV0gLy8gMikpCiAgICAgICAgZm9yIGZpZWxkIGluIHNlbGYuc25ha2U6CiAgICAgICAgICAgIHNlbGZbZmllbGRdID0gQ29udGVudC5TTkFLRQoKICAgIGRlZiB1cGRhdGUoc2VsZik6CiAgICAgICAgaWYgc2VsZi5zbmFrZS5uZXh0X2ZpZWxkKCkgPT0gc2VsZi5hcHBsZToKICAgICAgICAgICAgaGVhZCA9IHNlbGYuc25ha2UuZ3JvdygpCiAgICAgICAgICAgIHNlbGZbaGVhZF0gPSBDb250ZW50LlNOQUtFCgogICAgICAgICAgICBhcHBsZSA9IHNlbGYubmV3X2FwcGxlKCkKICAgICAgICAgICAgc2VsZlthcHBsZV0gPSBDb250ZW50LkFQUExFCiAgICAgICAgZWxzZToKICAgICAgICAgICAgaGVhZCwgZW1wdHkgPSBzZWxmLnNuYWtlLm1vdmUoKQogICAgICAgICAgICBpZiBoZWFkIG5vdCBpbiBzZWxmOgogICAgICAgICAgICAgICAgcmFpc2UgTG9zZUVycm9yCgogICAgICAgICAgICBzZWxmW2hlYWRdID0gQ29udGVudC5TTkFLRQogICAgICAgICAgICBzZWxmW2VtcHR5XSA9IENvbnRlbnQuRU1QVFkKCiAgICBkZWYgbmV3X2FwcGxlKHNlbGYpIC0+IEZpZWxkOgogICAgICAgIHRyeToKICAgICAgICAgICAgc2VsZi5hcHBsZSA9IHJhbmRvbS5jaG9pY2UoCiAgICAgICAgICAgICAgICBba2V5IGZvciBrZXksIHZhbHVlIGluIHNlbGYuaXRlbXMoKSBpZiB2YWx1ZSBpcyBDb250ZW50LkVNUFRZXQogICAgICAgICAgICApCiAgICAgICAgICAgIHJldHVybiBzZWxmLmFwcGxlCiAgICAgICAgZXhjZXB0IEluZGV4RXJyb3IgYXMgZXJyOgogICAgICAgICAgICByYWlzZSBXaW5FcnJvciBmcm9tIGVycgoKCmRlZiBmaW5kX2Nvbm5lY3RlZF9yZWdpb25zKCk6CiAgICBwYXNzCgoKY2xhc3MgU25ha2VBSToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBib2FyZDogQm9hcmQpOgogICAgICAgIHNlbGYuYm9hcmQgPSBib2FyZAogICAgICAgIHNlbGYuX2RpcmVjdGlvbnM6IGRlcXVlW0RpcmVjdGlvbl0gPSBkZXF1ZShbXSkKCiAgICBAcHJvcGVydHkKICAgIGRlZiBhcHBsZShzZWxmKSAtPiBGaWVsZDoKICAgICAgICByZXR1cm4gc2VsZi5ib2FyZC5hcHBsZQoKICAgIEBwcm9wZXJ0eQogICAgZGVmIHNuYWtlKHNlbGYpIC0+IFNuYWtlOgogICAgICAgIHJldHVybiBzZWxmLmJvYXJkLnNuYWtlCgogICAgQHByb3BlcnR5CiAgICBkZWYgaGVhZChzZWxmKSAtPiBGaWVsZDoKICAgICAgICByZXR1cm4gc2VsZi5zbmFrZS5oZWFkCgogICAgZGVmIHNlYXJjaF9iZXN0X2RpcmVjdGlvbihzZWxmKSAtPiBEaXJlY3Rpb246CiAgICAgICAgZmllbGQgPSBzZWxmLmhlYWQKICAgICAgICB2aXNpdGVkOiBsaXN0W0ZpZWxkXSA9IFtdCiAgICAgICAgc2VsZi5fZGlyZWN0aW9ucyA9IGRlcXVlKFtdKQoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYuX3NlYXJjaChmaWVsZCwgc2VsZi5hcHBsZSwgc2VsZi5zbmFrZS5kaXJlY3Rpb24sIHZpc2l0ZWQpCiAgICAgICAgZXhjZXB0IEFwcGxlRm91bmRFcnJvcjoKICAgICAgICAgICAgIyBwcmludCgidGhlcmUgeW91IGFyZSIpCiAgICAgICAgICAgIHJldHVybiBzZWxmLl9kaXJlY3Rpb25zLnBvcGxlZnQoKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgIyBwcmludCgiT2hoaGggbm8iKQoKICAgIGRlZiBfc2VhcmNoKAogICAgICAgIHNlbGYsIHN0YXJ0OiBGaWVsZCwgZ29hbDogRmllbGQsIGRpcmVjdGlvbjogRGlyZWN0aW9uLCB2aXNpdGVkOiBsaXN0W0ZpZWxkXQogICAgKSAtPiBOb25lOgogICAgICAgIGlmIHN0YXJ0ID09IGdvYWw6CiAgICAgICAgICAgIHJhaXNlIEFwcGxlRm91bmRFcnJvcgoKICAgICAgICB2aXNpdGVkLmFwcGVuZChzdGFydCkKCiAgICAgICAgZGlyZWN0aW9ucyA9IGZpbHRlcigKICAgICAgICAgICAgbGFtYmRhIGQ6IChkICE9IGRpcmVjdGlvbi5vcHBvc2l0ZSgpKQogICAgICAgICAgICBhbmQgKHN0YXJ0ICsgZCBub3QgaW4gdmlzaXRlZCkKICAgICAgICAgICAgYW5kIChzdGFydCArIGQgaW4gc2VsZi5ib2FyZCkKICAgICAgICAgICAgYW5kIChzZWxmLmJvYXJkW3N0YXJ0ICsgZF0gIT0gQ29udGVudC5TTkFLRSksCiAgICAgICAgICAgIERpcmVjdGlvbiwKICAgICAgICApCgogICAgICAgIGZvciBfZGlyZWN0aW9uIGluIHNvcnRlZChkaXJlY3Rpb25zLCBrZXk9bGFtYmRhIGQ6IHNlbGYuYXBwbGUuZGlzdChzdGFydCArIGQpKToKICAgICAgICAgICAgc2VsZi5fZGlyZWN0aW9ucy5hcHBlbmQoX2RpcmVjdGlvbikKICAgICAgICAgICAgc2VsZi5fc2VhcmNoKHN0YXJ0ICsgX2RpcmVjdGlvbiwgZ29hbCwgX2RpcmVjdGlvbiwgdmlzaXRlZD12aXNpdGVkKQogICAgICAgICAgICBfID0gc2VsZi5fZGlyZWN0aW9ucy5wb3AoKQoKCmRlZiBkcmF3X2JvYXJkKHN1cmZhY2UsIGJvYXJkKToKICAgIGZvciBmaWVsZCwgY29udGVudCBpbiBib2FyZC5pdGVtcygpOgogICAgICAgIGlmIGNvbnRlbnQgPT0gQ29udGVudC5FTVBUWToKICAgICAgICAgICAgXyA9IHN1cmZhY2UuZmlsbChDb2xvci5HUkVZLnZhbHVlLCBmaWVsZC5yZWN0KQogICAgICAgIGVsaWYgY29udGVudCA9PSBDb250ZW50LlNOQUtFOgogICAgICAgICAgICBfID0gc3VyZmFjZS5maWxsKENvbG9yLkdSRUVOLnZhbHVlLCBmaWVsZC5yZWN0KQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIF8gPSBzdXJmYWNlLmZpbGwoQ29sb3IuUkVELnZhbHVlLCBmaWVsZC5yZWN0KQoKCmRlZiBzZXRfdGV4dCh0ZXh0LCB4LCB5LCBmb250U2l6ZSk6CiAgICBmb250ID0gcGcuZm9udC5Gb250KCJmcmVlc2Fuc2JvbGQudHRmIiwgZm9udFNpemUpCgogICAgdGV4dCA9IGZvbnQucmVuZGVyKHRleHQsIFRydWUsIENvbG9yLkxJR0hUR1JFWS52YWx1ZSwgQ29sb3IuR1JFWS52YWx1ZSkKICAgIHJlY3QgPSB0ZXh0LmdldF9yZWN0KCkKICAgIHJlY3QuY2VudGVyID0gKHgsIHkpCiAgICByZXR1cm4gKHRleHQsIHJlY3QpCgoKZGVmIG1haW4oKToKICAgIHJhbmRvbS5zZWVkKCkKICAgIGNsb2NrID0gcGcudGltZS5DbG9jaygpCiAgICBib2FyZCA9IEJvYXJkKEJPQVJEX1NJWkUpCgogICAgcGcuaW5pdCgpCiAgICBzY3JlZW4gPSBwZy5kaXNwbGF5LnNldF9tb2RlKFdJTlNJWkUpCiAgICBwZy5kaXNwbGF5LnNldF9jYXB0aW9uKCJTbmFrZSIpCgogICAgc2NyZWVuLmZpbGwoQ29sb3IuQkxBQ0sudmFsdWUpCiAgICBkcmF3X2JvYXJkKHNjcmVlbiwgYm9hcmQpCgogICAgZG9uZSA9IEZhbHNlCiAgICBmcmFtZV9jb3VudGVyID0gMAoKICAgIHNuYWtlX2FpID0gU25ha2VBSShib2FyZCkKCiAgICB0cnk6CiAgICAgICAgd2hpbGUgbm90IGRvbmU6CiAgICAgICAgICAgIGlmIGZyYW1lX2NvdW50ZXIgPT0gMDoKICAgICAgICAgICAgICAgIGZvciBldmVudCBpbiBwZy5ldmVudC5nZXQoKToKICAgICAgICAgICAgICAgICAgICBpZiBldmVudC50eXBlID09IHBnLktFWVVQOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBldmVudC5rZXkgaW4gKHBnLktfVVAsIHBnLktfdyk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2FyZC5zbmFrZS50dXJuKERpcmVjdGlvbi5VUCkKICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiBldmVudC5rZXkgaW4gKHBnLktfRE9XTiwgcGcuS19zKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvYXJkLnNuYWtlLnR1cm4oRGlyZWN0aW9uLkRPV04pCiAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgZXZlbnQua2V5IGluIChwZy5LX0xFRlQsIHBnLktfYSk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2FyZC5zbmFrZS50dXJuKERpcmVjdGlvbi5MRUZUKQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmIGV2ZW50LmtleSBpbiAocGcuS19SSUdIVCwgcGcuS19kKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvYXJkLnNuYWtlLnR1cm4oRGlyZWN0aW9uLlJJR0hUKQogICAgICAgICAgICAgICAgICAgICAgICBicmVhawoKICAgICAgICAgICAgICAgICAgICBpZiBldmVudC50eXBlID09IHBnLlFVSVQ6CiAgICAgICAgICAgICAgICAgICAgICAgIGRvbmUgPSBUcnVlCiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICBzdGFydCA9IHRpbWUudGltZSgpCiAgICAgICAgICAgICAgICBkaXJlY3Rpb24gPSBzbmFrZV9haS5zZWFyY2hfYmVzdF9kaXJlY3Rpb24oKQogICAgICAgICAgICAgICAgcHJpbnQoZiJ7MTAwMCAqICh0aW1lLnRpbWUoKSAtIHN0YXJ0KTouM2Z9IikKICAgICAgICAgICAgICAgIGJvYXJkLnNuYWtlLnR1cm4oZGlyZWN0aW9uKQoKICAgICAgICAgICAgICAgIGJvYXJkLnVwZGF0ZSgpCiAgICAgICAgICAgICAgICBkcmF3X2JvYXJkKHNjcmVlbiwgYm9hcmQpCiAgICAgICAgICAgICAgICBwZy5kaXNwbGF5LnVwZGF0ZSgpCiAgICAgICAgICAgIGNsb2NrLnRpY2soNDApCiAgICAgICAgICAgIGZyYW1lX2NvdW50ZXIgPSAoZnJhbWVfY291bnRlciArIDEpICUgRlJBTUVTX1BFUl9NT1ZFCiAgICBleGNlcHQgTG9zZUVycm9yOgogICAgICAgIHRleHRfd2l0aF9jb29yZHMgPSBzZXRfdGV4dCgiWW91IGxvc2UhIiwgV0lOU0laRVswXSAvLyAyLCBXSU5TSVpFWzFdIC8vIDIsIDQ4KQogICAgICAgIHNjcmVlbi5ibGl0KCp0ZXh0X3dpdGhfY29vcmRzKQogICAgICAgIHBnLmRpc3BsYXkudXBkYXRlKCkKICAgIGV4Y2VwdCBXaW5FcnJvcjoKICAgICAgICB0ZXh0X3dpdGhfY29vcmRzID0gc2V0X3RleHQoIllvdSB3aW4hIiwgV0lOU0laRVswXSAvLyAyLCBXSU5TSVpFWzFdIC8vIDIsIDQ4KQogICAgICAgIHNjcmVlbi5ibGl0KCp0ZXh0X3dpdGhfY29vcmRzKQogICAgICAgIHBnLmRpc3BsYXkudXBkYXRlKCkKCiAgICBwZy5ldmVudC5zZXRfYWxsb3dlZChwZy5RVUlUKQogICAgcGcuZXZlbnQuc2V0X2FsbG93ZWQocGcuS0VZVVApCiAgICBfID0gcGcuZXZlbnQud2FpdCgxMDAwMDApCgoKaWYgX19uYW1lX18gPT0gIl9fbWFpbl9fIjoKICAgIG1haW4oKQo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIUOAAAAAAAAhQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13092,
					1,
					"insert",
					{
						"characters": "\nself.+"
					},
					"CAAAAIYOAAAAAAAAhw4AAAAAAAAAAAAAhw4AAAAAAACPDgAAAAAAAAAAAACPDgAAAAAAAJAOAAAAAAAAAAAAAJAOAAAAAAAAkQ4AAAAAAAAAAAAAkQ4AAAAAAACSDgAAAAAAAAAAAACSDgAAAAAAAJMOAAAAAAAAAAAAAJMOAAAAAAAAlA4AAAAAAAAAAAAAlA4AAAAAAACVDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYOAAAAAAAAhg4AAAAAAAD////////vfw"
				],
				[
					13093,
					1,
					"left_delete",
					null,
					"AQAAAJQOAAAAAAAAlA4AAAAAAAABAAAAKw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUOAAAAAAAAlQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13094,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAAJQOAAAAAAAAlQ4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQOAAAAAAAAlA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13095,
					1,
					"left_delete",
					null,
					"AQAAAJQOAAAAAAAAlA4AAAAAAAABAAAAKw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUOAAAAAAAAlQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13096,
					1,
					"insert",
					{
						"characters": "_a[[;"
					},
					"BQAAAJQOAAAAAAAAlQ4AAAAAAAAAAAAAlQ4AAAAAAACWDgAAAAAAAAAAAACWDgAAAAAAAJcOAAAAAAAAAAAAAJcOAAAAAAAAmA4AAAAAAAAAAAAAmA4AAAAAAACZDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJQOAAAAAAAAlA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13097,
					3,
					"left_delete",
					null,
					"AwAAAJgOAAAAAAAAmA4AAAAAAAABAAAAO5cOAAAAAAAAlw4AAAAAAAABAAAAW5YOAAAAAAAAlg4AAAAAAAABAAAAWw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJkOAAAAAAAAmQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13098,
					1,
					"insert",
					{
						"characters": "pple"
					},
					"BAAAAJYOAAAAAAAAlw4AAAAAAAAAAAAAlw4AAAAAAACYDgAAAAAAAAAAAACYDgAAAAAAAJkOAAAAAAAAAAAAAJkOAAAAAAAAmg4AAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJYOAAAAAAAAlg4AAAAAAAAAAAAAAADwvw"
				],
				[
					13099,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAJoOAAAAAAAAmw4AAAAAAAAAAAAAmw4AAAAAAACcDgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJoOAAAAAAAAmg4AAAAAAAAAAAAAAADwvw"
				],
				[
					13100,
					1,
					"insert",
					{
						"characters": " apple"
					},
					"BgAAAJwOAAAAAAAAnQ4AAAAAAAAAAAAAnQ4AAAAAAACeDgAAAAAAAAAAAACeDgAAAAAAAJ8OAAAAAAAAAAAAAJ8OAAAAAAAAoA4AAAAAAAAAAAAAoA4AAAAAAAChDgAAAAAAAAAAAAChDgAAAAAAAKIOAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJwOAAAAAAAAnA4AAAAAAAAAAAAAAADwvw"
				],
				[
					13112,
					1,
					"left_delete",
					null,
					"AQAAAJQOAAAAAAAAlA4AAAAAAAABAAAAXw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJUOAAAAAAAAlQ4AAAAAAAAAAAAAAADwvw"
				],
				[
					13120,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAHQBAAAAAAAAdQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQBAAAAAAAAdAEAAAAAAAAAAAAAAADwvw"
				],
				[
					13128,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAEEUAAAAAAAAQhQAAAAAAAAAAAAAQhQAAAAAAABKFAAAAAAAAAAAAABKFAAAAAAAAEsUAAAAAAAAAAAAAEsUAAAAAAAATBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEUAAAAAAAAQRQAAAAAAAAAAAAAAADwvw"
				],
				[
					13129,
					1,
					"insert",
					{
						"characters": " slef"
					},
					"BQAAAEwUAAAAAAAATRQAAAAAAAAAAAAATRQAAAAAAABOFAAAAAAAAAAAAABOFAAAAAAAAE8UAAAAAAAAAAAAAE8UAAAAAAAAUBQAAAAAAAAAAAAAUBQAAAAAAABRFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEwUAAAAAAAATBQAAAAAAAAAAAAAAADwvw"
				],
				[
					13130,
					4,
					"left_delete",
					null,
					"BAAAAFAUAAAAAAAAUBQAAAAAAAABAAAAZk8UAAAAAAAATxQAAAAAAAABAAAAZU4UAAAAAAAAThQAAAAAAAABAAAAbE0UAAAAAAAATRQAAAAAAAABAAAAcw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEUAAAAAAAAURQAAAAAAAAAAAAAAADwvw"
				],
				[
					13131,
					1,
					"insert",
					{
						"characters": "len(self._"
					},
					"CgAAAE0UAAAAAAAAThQAAAAAAAAAAAAAThQAAAAAAABPFAAAAAAAAAAAAABPFAAAAAAAAFAUAAAAAAAAAAAAAFAUAAAAAAAAURQAAAAAAAAAAAAAURQAAAAAAABSFAAAAAAAAAAAAABSFAAAAAAAAFMUAAAAAAAAAAAAAFMUAAAAAAAAVBQAAAAAAAAAAAAAVBQAAAAAAABVFAAAAAAAAAAAAABVFAAAAAAAAFYUAAAAAAAAAAAAAFYUAAAAAAAAVxQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE0UAAAAAAAATRQAAAAAAAAAAAAAAADwvw"
				],
				[
					13132,
					1,
					"insert_completion",
					{
						"completion": "_directions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_directions"
					},
					"AgAAAFYUAAAAAAAAVhQAAAAAAAABAAAAX1YUAAAAAAAAYRQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFcUAAAAAAAAVxQAAAAAAAAAAAAAAADwvw"
				],
				[
					13133,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGEUAAAAAAAAYhQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGEUAAAAAAAAYRQAAAAAAAAAAAAAAADwvw"
				],
				[
					13134,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAGIUAAAAAAAAYxQAAAAAAAAAAAAAYxQAAAAAAABkFAAAAAAAAAAAAABkFAAAAAAAAGUUAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGIUAAAAAAAAYhQAAAAAAAAAAAAAAADwvw"
				],
				[
					13135,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGUUAAAAAAAAZhQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGUUAAAAAAAAZRQAAAAAAAAAAAAAAADwvw"
				],
				[
					13137,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEEUAAAAAAAAQhQAAAAAAAAAAAAAQhQAAAAAAABKFAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEEUAAAAAAAAQRQAAAAAAAAAAAAAAMB4QA"
				],
				[
					13140,
					1,
					"insert",
					{
						"characters": "self"
					},
					"BQAAAG8UAAAAAAAAcBQAAAAAAAAAAAAAQhQAAAAAAABCFAAAAAAAAAgAAAAgICAgICAgIGgUAAAAAAAAaRQAAAAAAAAAAAAAaRQAAAAAAABqFAAAAAAAAAAAAABqFAAAAAAAAGsUAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8UAAAAAAAAbxQAAAAAAAD////////vfw"
				],
				[
					13141,
					1,
					"insert",
					{
						"characters": ".ap"
					},
					"AwAAAGsUAAAAAAAAbBQAAAAAAAAAAAAAbBQAAAAAAABtFAAAAAAAAAAAAABtFAAAAAAAAG4UAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGsUAAAAAAAAaxQAAAAAAAAAAAAAAADwvw"
				],
				[
					13142,
					1,
					"insert",
					{
						"characters": "ple.dist()"
					},
					"CgAAAG4UAAAAAAAAbxQAAAAAAAAAAAAAbxQAAAAAAABwFAAAAAAAAAAAAABwFAAAAAAAAHEUAAAAAAAAAAAAAHEUAAAAAAAAchQAAAAAAAAAAAAAchQAAAAAAABzFAAAAAAAAAAAAABzFAAAAAAAAHQUAAAAAAAAAAAAAHQUAAAAAAAAdRQAAAAAAAAAAAAAdRQAAAAAAAB2FAAAAAAAAAAAAAB2FAAAAAAAAHcUAAAAAAAAAAAAAHcUAAAAAAAAeBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG4UAAAAAAAAbhQAAAAAAAAAAAAAAADwvw"
				],
				[
					13144,
					1,
					"insert",
					{
						"characters": "field"
					},
					"BQAAAHcUAAAAAAAAeBQAAAAAAAAAAAAAeBQAAAAAAAB5FAAAAAAAAAAAAAB5FAAAAAAAAHoUAAAAAAAAAAAAAHoUAAAAAAAAexQAAAAAAAAAAAAAexQAAAAAAAB8FAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHcUAAAAAAAAdxQAAAAAAAAAAAAAAADwvw"
				],
				[
					13146,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAH0UAAAAAAAAfhQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAH0UAAAAAAAAfRQAAAAAAAAAAAAAAADwvw"
				],
				[
					13149,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAIcUAAAAAAAAixQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIcUAAAAAAAAhxQAAAAAAAAAAAAAAABWQA"
				],
				[
					13150,
					1,
					"insert",
					{
						"characters": "\nelse:"
					},
					"BwAAAIsUAAAAAAAAjBQAAAAAAAAAAAAAjBQAAAAAAACYFAAAAAAAAAAAAACYFAAAAAAAAJkUAAAAAAAAAAAAAJkUAAAAAAAAmhQAAAAAAAAAAAAAmhQAAAAAAACbFAAAAAAAAAAAAACbFAAAAAAAAJwUAAAAAAAAAAAAAJwUAAAAAAAAnRQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsUAAAAAAAAixQAAAAAAAAAAAAAAADwvw"
				],
				[
					13151,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJ0UAAAAAAAAnhQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ0UAAAAAAAAnRQAAAAAAAAAAAAAAADwvw"
				],
				[
					13152,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"BAAAAJ4UAAAAAAAAnxQAAAAAAAAAAAAAnxQAAAAAAACrFAAAAAAAAAAAAACfFAAAAAAAAJ8UAAAAAAAADAAAACAgICAgICAgICAgIJ8UAAAAAAAArxQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4UAAAAAAAAnhQAAAAAAAAAAAAAAADwvw"
				],
				[
					13158,
					1,
					"unindent",
					null,
					"AQAAAIwUAAAAAAAAjBQAAAAAAAAEAAAAICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJgUAAAAAAAAmBQAAAAAAAAAAAAAAIBgQA"
				],
				[
					13160,
					1,
					"unindent",
					null,
					"AQAAAJsUAAAAAAAAmxQAAAAAAAAEAAAAICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKMUAAAAAAAAoxQAAAAAAAAAAAAAAABWQA"
				],
				[
					13167,
					1,
					"paste",
					null,
					"AQAAAIsUAAAAAAAArBQAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIsUAAAAAAAAixQAAAAAAAAAAAAAAADwvw"
				],
				[
					13168,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAALoUAAAAAAAAuhQAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAKwUAAAAAAAArBQAAAAAAAAAAAAAAADwvw"
				],
				[
					13177,
					1,
					"left_delete",
					null,
					"AQAAALUUAAAAAAAAtRQAAAAAAAAFAAAAZWxzZTo",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoUAAAAAAAAtRQAAAAAAAAAAAAAAADwvw"
				],
				[
					13179,
					1,
					"unindent",
					null,
					"AQAAALYUAAAAAAAAthQAAAAAAAAEAAAAICAgIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAL4UAAAAAAAAvhQAAAAAAAAAAAAAAABWQA"
				],
				[
					13180,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAK0UAAAAAAAArRQAAAAAAAAIAAAAICAgICAgICA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALoUAAAAAAAAuhQAAAAAAAAAAAAAAADwvw"
				],
				[
					13206,
					1,
					"insert",
					{
						"characters": "\n\nprint(lis"
					},
					"DgAAAK0XAAAAAAAArhcAAAAAAAAAAAAArhcAAAAAAAC2FwAAAAAAAAAAAAC2FwAAAAAAALcXAAAAAAAAAAAAALcXAAAAAAAAvxcAAAAAAAAAAAAArhcAAAAAAACuFwAAAAAAAAgAAAAgICAgICAgILcXAAAAAAAAuBcAAAAAAAAAAAAAuBcAAAAAAAC5FwAAAAAAAAAAAAC5FwAAAAAAALoXAAAAAAAAAAAAALoXAAAAAAAAuxcAAAAAAAAAAAAAuxcAAAAAAAC8FwAAAAAAAAAAAAC8FwAAAAAAAL0XAAAAAAAAAAAAAL0XAAAAAAAAvhcAAAAAAAAAAAAAvhcAAAAAAAC/FwAAAAAAAAAAAAC/FwAAAAAAAMAXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK0XAAAAAAAArRcAAAAAAAAAAAAAAADwvw"
				],
				[
					13207,
					1,
					"insert",
					{
						"characters": "t(direc"
					},
					"BwAAAMAXAAAAAAAAwRcAAAAAAAAAAAAAwRcAAAAAAADCFwAAAAAAAAAAAADCFwAAAAAAAMMXAAAAAAAAAAAAAMMXAAAAAAAAxBcAAAAAAAAAAAAAxBcAAAAAAADFFwAAAAAAAAAAAADFFwAAAAAAAMYXAAAAAAAAAAAAAMYXAAAAAAAAxxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMAXAAAAAAAAwBcAAAAAAAAAAAAAAADwvw"
				],
				[
					13208,
					1,
					"insert_completion",
					{
						"completion": "directions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "directions"
					},
					"AgAAAMIXAAAAAAAAwhcAAAAAAAAFAAAAZGlyZWPCFwAAAAAAAMwXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMcXAAAAAAAAxxcAAAAAAAAAAAAAAADwvw"
				],
				[
					13209,
					1,
					"insert",
					{
						"characters": "))"
					},
					"AgAAAMwXAAAAAAAAzRcAAAAAAAAAAAAAzRcAAAAAAADOFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMwXAAAAAAAAzBcAAAAAAAAAAAAAAADwvw"
				],
				[
					13230,
					1,
					"reindent",
					null,
					"AQAAAM8XAAAAAAAA1xcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM8XAAAAAAAAzxcAAAAAAAAAAAAAAADwvw"
				],
				[
					13231,
					1,
					"insert",
					{
						"characters": "\ndirec"
					},
					"CAAAANcXAAAAAAAA2BcAAAAAAAAAAAAA2BcAAAAAAADgFwAAAAAAAAAAAADPFwAAAAAAAM8XAAAAAAAACAAAACAgICAgICAg2BcAAAAAAADZFwAAAAAAAAAAAADZFwAAAAAAANoXAAAAAAAAAAAAANoXAAAAAAAA2xcAAAAAAAAAAAAA2xcAAAAAAADcFwAAAAAAAAAAAADcFwAAAAAAAN0XAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAANcXAAAAAAAA1xcAAAAAAAAAAAAAAADwvw"
				],
				[
					13232,
					1,
					"insert_completion",
					{
						"completion": "directions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "directions"
					},
					"AgAAANgXAAAAAAAA2BcAAAAAAAAFAAAAZGlyZWPYFwAAAAAAAOIXAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAN0XAAAAAAAA3RcAAAAAAAAAAAAAAADwvw"
				],
				[
					13233,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAOIXAAAAAAAA4xcAAAAAAAAAAAAA4xcAAAAAAADkFwAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOIXAAAAAAAA4hcAAAAAAAAAAAAAAADwvw"
				],
				[
					13234,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOQXAAAAAAAA5RcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOQXAAAAAAAA5BcAAAAAAAAAAAAAAADwvw"
				],
				[
					13237,
					1,
					"cut",
					null,
					"AQAAAAAYAAAAAAAAABgAAAAAAAA8AAAAc29ydGVkKGRpcmVjdGlvbnMsIGtleT1sYW1iZGEgZDogc2VsZi5hcHBsZS5kaXN0KHN0YXJ0ICsgZCkp",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAYAAAAAAAAPBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13240,
					1,
					"paste",
					null,
					"AQAAAOUXAAAAAAAAIRgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAOUXAAAAAAAA5RcAAAAAAAAAAAAAAADwvw"
				],
				[
					13244,
					1,
					"insert",
					{
						"characters": "dire"
					},
					"BAAAADwYAAAAAAAAPRgAAAAAAAAAAAAAPRgAAAAAAAA+GAAAAAAAAAAAAAA+GAAAAAAAAD8YAAAAAAAAAAAAAD8YAAAAAAAAQBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwYAAAAAAAAPBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13245,
					1,
					"insert_completion",
					{
						"completion": "directions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "directions"
					},
					"AgAAADwYAAAAAAAAPBgAAAAAAAAEAAAAZGlyZTwYAAAAAAAARhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAYAAAAAAAAQBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13252,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACEYAAAAAAAAIhgAAAAAAAAAAAAAIhgAAAAAAAAqGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACEYAAAAAAAAIRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13253,
					1,
					"insert",
					{
						"characters": "dire"
					},
					"BAAAACoYAAAAAAAAKxgAAAAAAAAAAAAAKxgAAAAAAAAsGAAAAAAAAAAAAAAsGAAAAAAAAC0YAAAAAAAAAAAAAC0YAAAAAAAALhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACoYAAAAAAAAKhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13254,
					1,
					"insert_completion",
					{
						"completion": "directions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "directions"
					},
					"AgAAACoYAAAAAAAAKhgAAAAAAAAEAAAAZGlyZSoYAAAAAAAANBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4YAAAAAAAALhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13255,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADQYAAAAAAAANRgAAAAAAAAAAAAANRgAAAAAAAA2GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQYAAAAAAAANBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13256,
					1,
					"insert",
					{
						"characters": " )_"
					},
					"AwAAADYYAAAAAAAANxgAAAAAAAAAAAAANxgAAAAAAAA4GAAAAAAAAAAAAAA4GAAAAAAAADkYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYYAAAAAAAANhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13257,
					2,
					"left_delete",
					null,
					"AgAAADgYAAAAAAAAOBgAAAAAAAABAAAAXzcYAAAAAAAANxgAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkYAAAAAAAAORgAAAAAAAAAAAAAAADwvw"
				],
				[
					13258,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAADcYAAAAAAAAOBgAAAAAAAAAAAAAOBgAAAAAAAA5GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADcYAAAAAAAANxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13269,
					1,
					"left_delete",
					null,
					"AQAAAK4XAAAAAAAArhcAAAAAAAAgAAAACiAgICAgICAgcHJpbnQobGlzdChkaXJlY3Rpb25zKSk",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAM4XAAAAAAAArhcAAAAAAAAAAAAAAADwvw"
				],
				[
					13272,
					1,
					"black_file",
					null,
					"AQAAAAAAAAAAAAAADCMAAAAAAAANIwAAIyEvdXNyL2Jpbi9lbnYgcHl0aG9uCmltcG9ydCByYW5kb20KaW1wb3J0IG1hdGgKaW1wb3J0IHB5Z2FtZSBhcyBwZwppbXBvcnQgZW51bQppbXBvcnQgcGRiCmZyb20gY29sbGVjdGlvbnMgaW1wb3J0IGRlcXVlCmZyb20gdHlwaW5nIGltcG9ydCBVbmlvbiwgT3B0aW9uYWwsIEl0ZXJhYmxlCmltcG9ydCB0aW1lCgojIGNvbnN0YW50cwpCT0FSRF9TSVpFID0gKDQwLCAyMCkKRklFTERfUFggPSAzMApHQVBfUFggPSA1CkJPUkRFUl9QWCA9IDEwMApXSU5TSVpFID0gdHVwbGUoCiAgICBtYXAobGFtYmRhIHg6IHggKiBGSUVMRF9QWCArICh4IC0gMSkgKiBHQVBfUFggKyAyICogQk9SREVSX1BYLCBCT0FSRF9TSVpFKQopCgpGUkFNRVNfUEVSX01PVkUgPSAxMAoKCmNsYXNzIENvbG9yKGVudW0uRW51bSk6CiAgICBHUkVFTiA9IDAsIDI1NSwgMAogICAgR1JFWSA9IDMyLCAzMiwgMzIKICAgIEJMQUNLID0gMCwgMCwgMAogICAgUkVEID0gMjU1LCAwLCAwCiAgICBMSUdIVEdSRVkgPSAxMDAsIDEwMCwgMTAwCgoKY2xhc3MgV2luRXJyb3IoRXhjZXB0aW9uKToKICAgIHBhc3MKCgpjbGFzcyBMb3NlRXJyb3IoRXhjZXB0aW9uKToKICAgIHBhc3MKCgpjbGFzcyBBcHBsZUZvdW5kRXJyb3IoRXhjZXB0aW9uKToKICAgIHBhc3MKCgpjbGFzcyBEaXJlY3Rpb24oZW51bS5FbnVtKToKICAgIFJJR0hUID0gKDEsIDApCiAgICBMRUZUID0gKC0xLCAwKQogICAgVVAgPSAoMCwgMSkKICAgIERPV04gPSAoMCwgLTEpCgogICAgIyBkZWYgX19hZGRfXyhzZWxmLCBvdGhlcikgLT4gdHVwbGVbaW50LCBpbnRdOgogICAgIyAgICAgcmV0dXJuIChzZWxmLnZhbHVlWzBdICsgb3RoZXIudmFsdWVbMF0sIHNlbGYudmFsdWVbMV0gKyBvdGhlci52YWx1ZVsxXSkKCiAgICBkZWYgb3Bwb3NpdGUoc2VsZik6CiAgICAgICAgcmV0dXJuIERpcmVjdGlvbigoLXNlbGYudmFsdWVbMF0sIC1zZWxmLnZhbHVlWzFdKSkKCgpjbGFzcyBDb250ZW50KGVudW0uRW51bSk6CiAgICBFTVBUWSA9IGVudW0uYXV0bygpCiAgICBTTkFLRSA9IGVudW0uYXV0bygpCiAgICBBUFBMRSA9IGVudW0uYXV0bygpCgoKY2xhc3MgRmllbGQ6CiAgICBkZWYgX19pbml0X18oc2VsZiwgeDogaW50LCB5OiBpbnQpOgogICAgICAgIHNlbGYueCA9IHgKICAgICAgICBzZWxmLnkgPSB5CiAgICAgICAgc2VsZi5fcmVjdCA9IE5vbmUKCiAgICBkZWYgX19lcV9fKHNlbGYsIG90aGVyKToKICAgICAgICByZXR1cm4gKHNlbGYueCA9PSBvdGhlci54KSBhbmQgKHNlbGYueSA9PSBvdGhlci55KQoKICAgIGRlZiBfX3N1Yl9fKHNlbGYsIG90aGVyOiBEaXJlY3Rpb24pOgogICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKG90aGVyLCBEaXJlY3Rpb24pOgogICAgICAgICAgICByYWlzZSBWYWx1ZUVycm9yKCJZb3UgY2FuIG9ubHkgc3VidHJhY3QgJ0RpcmVjdGlvbicgZnJvbSAnRmllbGQnISIpCgogICAgICAgIHJldHVybiBGaWVsZChzZWxmLnggLSBvdGhlci52YWx1ZVswXSwgc2VsZi55IC0gb3RoZXIudmFsdWVbMV0pCgogICAgZGVmIF9fYWRkX18oc2VsZiwgb3RoZXI6IERpcmVjdGlvbik6CiAgICAgICAgaWYgbm90IGlzaW5zdGFuY2Uob3RoZXIsIERpcmVjdGlvbik6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoIllvdSBjYW4gb25seSBhZGQgJ0RpcmVjdGlvbicgdG8gJ0ZpZWxkJyEiKQoKICAgICAgICByZXR1cm4gRmllbGQoc2VsZi54ICsgb3RoZXIudmFsdWVbMF0sIHNlbGYueSArIG90aGVyLnZhbHVlWzFdKQoKICAgIGRlZiBfX2hhc2hfXyhzZWxmKToKICAgICAgICByZXR1cm4gaGFzaCgoc2VsZi54LCBzZWxmLnkpKQoKICAgIGRlZiBfX3N0cl9fKHNlbGYpOgogICAgICAgIHJldHVybiBmIkZpZWxkKHg9e3NlbGYueH0sIHk9e3NlbGYueX0pIgoKICAgIGRlZiBkaXN0KHNlbGYsIG90aGVyKToKICAgICAgICByZXR1cm4gYWJzKHNlbGYueCAtIG90aGVyLngpICsgYWJzKHNlbGYueSAtIG90aGVyLnkpCgogICAgQHByb3BlcnR5CiAgICBkZWYgcmVjdChzZWxmKSAtPiBwZy5SZWN0OgogICAgICAgIGlmIHNlbGYuX3JlY3QgaXMgTm9uZToKICAgICAgICAgICAgbGVmdCA9IEJPUkRFUl9QWCArIHNlbGYueCAqIEZJRUxEX1BYICsgc2VsZi54ICogR0FQX1BYCiAgICAgICAgICAgIHRvcCA9IFdJTlNJWkVbMV0gLSBCT1JERVJfUFggLSAoKHNlbGYueSArIDEpICogRklFTERfUFggKyBzZWxmLnkgKiBHQVBfUFgpCiAgICAgICAgICAgIHdpZHRoID0gRklFTERfUFgKICAgICAgICAgICAgaGVpZ2h0ID0gRklFTERfUFgKICAgICAgICAgICAgc2VsZi5fcmVjdCA9IHBnLlJlY3QobGVmdCwgdG9wLCB3aWR0aCwgaGVpZ2h0KQogICAgICAgIHJldHVybiBzZWxmLl9yZWN0CgoKY2xhc3MgU25ha2UoZGVxdWUpOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHBvczogRmllbGQsIGRpcmVjdGlvbjogRGlyZWN0aW9uID0gRGlyZWN0aW9uLkxFRlQpOgogICAgICAgIHN1cGVyKCkuX19pbml0X18oW3BvcywgcG9zIC0gZGlyZWN0aW9uXSkKICAgICAgICBzZWxmLmRpcmVjdGlvbiA9IGRpcmVjdGlvbgoKICAgIGRlZiBfX2l0ZXIoc2VsZik6CiAgICAgICAgc3VwZXIoKS5fX2l0ZXJfXygpCgogICAgZGVmIG1vdmUoc2VsZikgLT4gdHVwbGVbRmllbGQsIEZpZWxkXToKICAgICAgICBmaWVsZCA9IHNlbGYubmV4dF9maWVsZCgpCiAgICAgICAgaWYgZmllbGQgaW4gc2VsZjoKICAgICAgICAgICAgcmFpc2UgTG9zZUVycm9yCgogICAgICAgIHNlbGYuYXBwZW5kbGVmdChmaWVsZCkKICAgICAgICBlbXB0eSA9IHNlbGYucG9wKCkKICAgICAgICByZXR1cm4gZmllbGQsIGVtcHR5CgogICAgZGVmIGdyb3coc2VsZikgLT4gRmllbGQ6CiAgICAgICAgZmllbGQgPSBzZWxmLm5leHRfZmllbGQoKQogICAgICAgIHNlbGYuYXBwZW5kbGVmdChmaWVsZCkKICAgICAgICByZXR1cm4gZmllbGQKCiAgICBkZWYgbmV4dF9maWVsZChzZWxmKSAtPiBGaWVsZDoKICAgICAgICByZXR1cm4gc2VsZi5oZWFkICsgc2VsZi5kaXJlY3Rpb24KCiAgICBAcHJvcGVydHkKICAgIGRlZiBoZWFkKHNlbGYpIC0+IEZpZWxkOgogICAgICAgIHJldHVybiBzZWxmWzBdCgogICAgZGVmIHR1cm4oc2VsZiwgZGlyZWN0aW9uOiBPcHRpb25hbFtEaXJlY3Rpb25dKToKICAgICAgICBpZiAoZGlyZWN0aW9uIGlzIG5vdCBOb25lKSBhbmQgKHNlbGYuZGlyZWN0aW9uLm9wcG9zaXRlKCkgIT0gZGlyZWN0aW9uKToKICAgICAgICAgICAgc2VsZi5kaXJlY3Rpb24gPSBkaXJlY3Rpb24KCiAgICBkZWYgYWRtaXNzaWJsZV9kaXJlY3Rpb25zKHNlbGYpOgogICAgICAgIHBhc3MKCgpjbGFzcyBCb2FyZChkaWN0KToKICAgIGFwcGxlOiBGaWVsZAogICAgc25ha2U6IFNuYWtlCgogICAgZGVmIF9faW5pdF9fKHNlbGYsIHNoYXBlOiB0dXBsZVtpbnQsIGludF0pOgogICAgICAgIHNlbGYuc2hhcGUgPSBzaGFwZQoKICAgICAgICBzdXBlcigpLl9faW5pdF9fKAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBGaWVsZCh4LCB5KTogQ29udGVudC5FTVBUWQogICAgICAgICAgICAgICAgZm9yIHggaW4gcmFuZ2Uoc2hhcGVbMF0pCiAgICAgICAgICAgICAgICBmb3IgeSBpbiByYW5nZShzaGFwZVsxXSkKICAgICAgICAgICAgfQogICAgICAgICkKCiAgICAgICAgc2VsZi5pbml0X3NuYWtlKCkKCiAgICAgICAgIyBhcHBsZSA9IHNlbGYubmV3X2FwcGxlKCkKICAgICAgICBhcHBsZSA9IEZpZWxkKHNlbGYuc2hhcGVbMF0gLy8gMiArIDMsIHNlbGYuc2hhcGVbMV0gLy8gMikKICAgICAgICBzZWxmLmFwcGxlID0gYXBwbGUKICAgICAgICBzZWxmW2FwcGxlXSA9IENvbnRlbnQuQVBQTEUKCiAgICBkZWYgaW5pdF9zbmFrZShzZWxmKToKICAgICAgICBzZWxmLnNuYWtlID0gU25ha2UoRmllbGQoc2VsZi5zaGFwZVswXSAvLyAyLCBzZWxmLnNoYXBlWzFdIC8vIDIpKQogICAgICAgIGZvciBmaWVsZCBpbiBzZWxmLnNuYWtlOgogICAgICAgICAgICBzZWxmW2ZpZWxkXSA9IENvbnRlbnQuU05BS0UKCiAgICBkZWYgdXBkYXRlKHNlbGYpOgogICAgICAgIGlmIHNlbGYuc25ha2UubmV4dF9maWVsZCgpID09IHNlbGYuYXBwbGU6CiAgICAgICAgICAgIGhlYWQgPSBzZWxmLnNuYWtlLmdyb3coKQogICAgICAgICAgICBzZWxmW2hlYWRdID0gQ29udGVudC5TTkFLRQoKICAgICAgICAgICAgYXBwbGUgPSBzZWxmLm5ld19hcHBsZSgpCiAgICAgICAgICAgIHNlbGZbYXBwbGVdID0gQ29udGVudC5BUFBMRQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGhlYWQsIGVtcHR5ID0gc2VsZi5zbmFrZS5tb3ZlKCkKICAgICAgICAgICAgaWYgaGVhZCBub3QgaW4gc2VsZjoKICAgICAgICAgICAgICAgIHJhaXNlIExvc2VFcnJvcgoKICAgICAgICAgICAgc2VsZltoZWFkXSA9IENvbnRlbnQuU05BS0UKICAgICAgICAgICAgc2VsZltlbXB0eV0gPSBDb250ZW50LkVNUFRZCgogICAgZGVmIG5ld19hcHBsZShzZWxmKSAtPiBGaWVsZDoKICAgICAgICB0cnk6CiAgICAgICAgICAgIHNlbGYuYXBwbGUgPSByYW5kb20uY2hvaWNlKAogICAgICAgICAgICAgICAgW2tleSBmb3Iga2V5LCB2YWx1ZSBpbiBzZWxmLml0ZW1zKCkgaWYgdmFsdWUgaXMgQ29udGVudC5FTVBUWV0KICAgICAgICAgICAgKQogICAgICAgICAgICByZXR1cm4gc2VsZi5hcHBsZQogICAgICAgIGV4Y2VwdCBJbmRleEVycm9yIGFzIGVycjoKICAgICAgICAgICAgcmFpc2UgV2luRXJyb3IgZnJvbSBlcnIKCgpkZWYgZmluZF9jb25uZWN0ZWRfcmVnaW9ucygpOgogICAgcGFzcwoKCmNsYXNzIFNuYWtlQUk6CiAgICBkZWYgX19pbml0X18oc2VsZiwgYm9hcmQ6IEJvYXJkKToKICAgICAgICBzZWxmLmJvYXJkID0gYm9hcmQKICAgICAgICBzZWxmLl9kaXJlY3Rpb25zOiBkZXF1ZVtEaXJlY3Rpb25dID0gZGVxdWUoW10pCgogICAgQHByb3BlcnR5CiAgICBkZWYgYXBwbGUoc2VsZikgLT4gRmllbGQ6CiAgICAgICAgcmV0dXJuIHNlbGYuYm9hcmQuYXBwbGUKCiAgICBAcHJvcGVydHkKICAgIGRlZiBzbmFrZShzZWxmKSAtPiBTbmFrZToKICAgICAgICByZXR1cm4gc2VsZi5ib2FyZC5zbmFrZQoKICAgIEBwcm9wZXJ0eQogICAgZGVmIGhlYWQoc2VsZikgLT4gRmllbGQ6CiAgICAgICAgcmV0dXJuIHNlbGYuc25ha2UuaGVhZAoKICAgIGRlZiBzZWFyY2hfYmVzdF9kaXJlY3Rpb24oc2VsZikgLT4gRGlyZWN0aW9uOgogICAgICAgIGZpZWxkID0gc2VsZi5oZWFkCiAgICAgICAgdmlzaXRlZDogbGlzdFtGaWVsZF0gPSBbXQoKICAgICAgICBpZiBsZW4oc2VsZi5fZGlyZWN0aW9ucykgPT0gc2VsZi5hcHBsZS5kaXN0KGZpZWxkKToKICAgICAgICAgICAgcmV0dXJuIHNlbGYuX2RpcmVjdGlvbnMucG9wbGVmdCgpCgogICAgICAgIHNlbGYuX2RpcmVjdGlvbnMgPSBkZXF1ZShbXSkKCiAgICAgICAgdHJ5OgogICAgICAgICAgICBzZWxmLl9zZWFyY2goZmllbGQsIHNlbGYuYXBwbGUsIHNlbGYuc25ha2UuZGlyZWN0aW9uLCB2aXNpdGVkKQogICAgICAgIGV4Y2VwdCBBcHBsZUZvdW5kRXJyb3I6CiAgICAgICAgICAgICMgcHJpbnQoInRoZXJlIHlvdSBhcmUiKQogICAgICAgICAgICByZXR1cm4gc2VsZi5fZGlyZWN0aW9ucy5wb3BsZWZ0KCkKICAgICAgICBlbHNlOgogICAgICAgICAgICBwYXNzCiAgICAgICAgICAgICMgcHJpbnQoIk9oaGhoIG5vIikKCiAgICBkZWYgX3NlYXJjaCgKICAgICAgICBzZWxmLCBzdGFydDogRmllbGQsIGdvYWw6IEZpZWxkLCBkaXJlY3Rpb246IERpcmVjdGlvbiwgdmlzaXRlZDogbGlzdFtGaWVsZF0KICAgICkgLT4gTm9uZToKICAgICAgICBpZiBzdGFydCA9PSBnb2FsOgogICAgICAgICAgICByYWlzZSBBcHBsZUZvdW5kRXJyb3IKCiAgICAgICAgdmlzaXRlZC5hcHBlbmQoc3RhcnQpCgogICAgICAgIGRpcmVjdGlvbnMgPSBmaWx0ZXIoCiAgICAgICAgICAgIGxhbWJkYSBkOiAoZCAhPSBkaXJlY3Rpb24ub3Bwb3NpdGUoKSkKICAgICAgICAgICAgYW5kIChzdGFydCArIGQgbm90IGluIHZpc2l0ZWQpCiAgICAgICAgICAgIGFuZCAoc3RhcnQgKyBkIGluIHNlbGYuYm9hcmQpCiAgICAgICAgICAgIGFuZCAoc2VsZi5ib2FyZFtzdGFydCArIGRdICE9IENvbnRlbnQuU05BS0UpLAogICAgICAgICAgICBEaXJlY3Rpb24sCiAgICAgICAgKQoKCiAgICAgICAgZGlyZWN0aW9ucyA9IHNvcnRlZChkaXJlY3Rpb25zLCBrZXk9bGFtYmRhIGQ6IHNlbGYuYXBwbGUuZGlzdChzdGFydCArIGQpKQogICAgICAgIGRpcmVjdGlvbnMgPSAoKQogICAgICAgIGZvciBfZGlyZWN0aW9uIGluIGRpcmVjdGlvbnM6CiAgICAgICAgICAgIHNlbGYuX2RpcmVjdGlvbnMuYXBwZW5kKF9kaXJlY3Rpb24pCiAgICAgICAgICAgIHNlbGYuX3NlYXJjaChzdGFydCArIF9kaXJlY3Rpb24sIGdvYWwsIF9kaXJlY3Rpb24sIHZpc2l0ZWQ9dmlzaXRlZCkKICAgICAgICAgICAgXyA9IHNlbGYuX2RpcmVjdGlvbnMucG9wKCkKCgpkZWYgZHJhd19ib2FyZChzdXJmYWNlLCBib2FyZCk6CiAgICBmb3IgZmllbGQsIGNvbnRlbnQgaW4gYm9hcmQuaXRlbXMoKToKICAgICAgICBpZiBjb250ZW50ID09IENvbnRlbnQuRU1QVFk6CiAgICAgICAgICAgIF8gPSBzdXJmYWNlLmZpbGwoQ29sb3IuR1JFWS52YWx1ZSwgZmllbGQucmVjdCkKICAgICAgICBlbGlmIGNvbnRlbnQgPT0gQ29udGVudC5TTkFLRToKICAgICAgICAgICAgXyA9IHN1cmZhY2UuZmlsbChDb2xvci5HUkVFTi52YWx1ZSwgZmllbGQucmVjdCkKICAgICAgICBlbHNlOgogICAgICAgICAgICBfID0gc3VyZmFjZS5maWxsKENvbG9yLlJFRC52YWx1ZSwgZmllbGQucmVjdCkKCgpkZWYgc2V0X3RleHQodGV4dCwgeCwgeSwgZm9udFNpemUpOgogICAgZm9udCA9IHBnLmZvbnQuRm9udCgiZnJlZXNhbnNib2xkLnR0ZiIsIGZvbnRTaXplKQoKICAgIHRleHQgPSBmb250LnJlbmRlcih0ZXh0LCBUcnVlLCBDb2xvci5MSUdIVEdSRVkudmFsdWUsIENvbG9yLkdSRVkudmFsdWUpCiAgICByZWN0ID0gdGV4dC5nZXRfcmVjdCgpCiAgICByZWN0LmNlbnRlciA9ICh4LCB5KQogICAgcmV0dXJuICh0ZXh0LCByZWN0KQoKCmRlZiBtYWluKCk6CiAgICByYW5kb20uc2VlZCgpCiAgICBjbG9jayA9IHBnLnRpbWUuQ2xvY2soKQogICAgYm9hcmQgPSBCb2FyZChCT0FSRF9TSVpFKQoKICAgIHBnLmluaXQoKQogICAgc2NyZWVuID0gcGcuZGlzcGxheS5zZXRfbW9kZShXSU5TSVpFKQogICAgcGcuZGlzcGxheS5zZXRfY2FwdGlvbigiU25ha2UiKQoKICAgIHNjcmVlbi5maWxsKENvbG9yLkJMQUNLLnZhbHVlKQogICAgZHJhd19ib2FyZChzY3JlZW4sIGJvYXJkKQoKICAgIGRvbmUgPSBGYWxzZQogICAgZnJhbWVfY291bnRlciA9IDAKCiAgICBzbmFrZV9haSA9IFNuYWtlQUkoYm9hcmQpCgogICAgdHJ5OgogICAgICAgIHdoaWxlIG5vdCBkb25lOgogICAgICAgICAgICBpZiBmcmFtZV9jb3VudGVyID09IDA6CiAgICAgICAgICAgICAgICBmb3IgZXZlbnQgaW4gcGcuZXZlbnQuZ2V0KCk6CiAgICAgICAgICAgICAgICAgICAgaWYgZXZlbnQudHlwZSA9PSBwZy5LRVlVUDoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgZXZlbnQua2V5IGluIChwZy5LX1VQLCBwZy5LX3cpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9hcmQuc25ha2UudHVybihEaXJlY3Rpb24uVVApCiAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgZXZlbnQua2V5IGluIChwZy5LX0RPV04sIHBnLktfcyk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2FyZC5zbmFrZS50dXJuKERpcmVjdGlvbi5ET1dOKQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmIGV2ZW50LmtleSBpbiAocGcuS19MRUZULCBwZy5LX2EpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9hcmQuc25ha2UudHVybihEaXJlY3Rpb24uTEVGVCkKICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiBldmVudC5rZXkgaW4gKHBnLktfUklHSFQsIHBnLktfZCk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2FyZC5zbmFrZS50dXJuKERpcmVjdGlvbi5SSUdIVCkKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKCiAgICAgICAgICAgICAgICAgICAgaWYgZXZlbnQudHlwZSA9PSBwZy5RVUlUOgogICAgICAgICAgICAgICAgICAgICAgICBkb25lID0gVHJ1ZQogICAgICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgICAgICAgICAgc3RhcnQgPSB0aW1lLnRpbWUoKQogICAgICAgICAgICAgICAgZGlyZWN0aW9uID0gc25ha2VfYWkuc2VhcmNoX2Jlc3RfZGlyZWN0aW9uKCkKICAgICAgICAgICAgICAgIHByaW50KGYiezEwMDAgKiAodGltZS50aW1lKCkgLSBzdGFydCk6LjNmfSIpCiAgICAgICAgICAgICAgICBib2FyZC5zbmFrZS50dXJuKGRpcmVjdGlvbikKCiAgICAgICAgICAgICAgICBib2FyZC51cGRhdGUoKQogICAgICAgICAgICAgICAgZHJhd19ib2FyZChzY3JlZW4sIGJvYXJkKQogICAgICAgICAgICAgICAgcGcuZGlzcGxheS51cGRhdGUoKQogICAgICAgICAgICBjbG9jay50aWNrKDQwKQogICAgICAgICAgICBmcmFtZV9jb3VudGVyID0gKGZyYW1lX2NvdW50ZXIgKyAxKSAlIEZSQU1FU19QRVJfTU9WRQogICAgZXhjZXB0IExvc2VFcnJvcjoKICAgICAgICB0ZXh0X3dpdGhfY29vcmRzID0gc2V0X3RleHQoIllvdSBsb3NlISIsIFdJTlNJWkVbMF0gLy8gMiwgV0lOU0laRVsxXSAvLyAyLCA0OCkKICAgICAgICBzY3JlZW4uYmxpdCgqdGV4dF93aXRoX2Nvb3JkcykKICAgICAgICBwZy5kaXNwbGF5LnVwZGF0ZSgpCiAgICBleGNlcHQgV2luRXJyb3I6CiAgICAgICAgdGV4dF93aXRoX2Nvb3JkcyA9IHNldF90ZXh0KCJZb3Ugd2luISIsIFdJTlNJWkVbMF0gLy8gMiwgV0lOU0laRVsxXSAvLyAyLCA0OCkKICAgICAgICBzY3JlZW4uYmxpdCgqdGV4dF93aXRoX2Nvb3JkcykKICAgICAgICBwZy5kaXNwbGF5LnVwZGF0ZSgpCgogICAgcGcuZXZlbnQuc2V0X2FsbG93ZWQocGcuUVVJVCkKICAgIHBnLmV2ZW50LnNldF9hbGxvd2VkKHBnLktFWVVQKQogICAgXyA9IHBnLmV2ZW50LndhaXQoMTAwMDAwKQoKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtYWluKCkK",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAK4XAAAAAAAArhcAAAAAAAAAAAAAAADwvw"
				],
				[
					13288,
					1,
					"insert",
					{
						"characters": "sorted"
					},
					"BgAAABYYAAAAAAAAFxgAAAAAAAAAAAAAFxgAAAAAAAAYGAAAAAAAAAAAAAAYGAAAAAAAABkYAAAAAAAAAAAAABkYAAAAAAAAGhgAAAAAAAAAAAAAGhgAAAAAAAAbGAAAAAAAAAAAAAAbGAAAAAAAABwYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABYYAAAAAAAAFhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13290,
					1,
					"insert",
					{
						"characters": "direc"
					},
					"BQAAAB0YAAAAAAAAHhgAAAAAAAAAAAAAHhgAAAAAAAAfGAAAAAAAAAAAAAAfGAAAAAAAACAYAAAAAAAAAAAAACAYAAAAAAAAIRgAAAAAAAAAAAAAIRgAAAAAAAAiGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAB0YAAAAAAAAHRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13291,
					1,
					"insert_completion",
					{
						"completion": "directions",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "directions"
					},
					"AgAAAB0YAAAAAAAAHRgAAAAAAAAFAAAAZGlyZWMdGAAAAAAAACcYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACIYAAAAAAAAIhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13292,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACcYAAAAAAAAKBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACcYAAAAAAAAJxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13293,
					1,
					"insert",
					{
						"characters": " key=;a"
					},
					"BwAAACgYAAAAAAAAKRgAAAAAAAAAAAAAKRgAAAAAAAAqGAAAAAAAAAAAAAAqGAAAAAAAACsYAAAAAAAAAAAAACsYAAAAAAAALBgAAAAAAAAAAAAALBgAAAAAAAAtGAAAAAAAAAAAAAAtGAAAAAAAAC4YAAAAAAAAAAAAAC4YAAAAAAAALxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgYAAAAAAAAKBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13294,
					2,
					"left_delete",
					null,
					"AgAAAC4YAAAAAAAALhgAAAAAAAABAAAAYS0YAAAAAAAALRgAAAAAAAABAAAAOw",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8YAAAAAAAALxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13295,
					1,
					"insert",
					{
						"characters": "lm"
					},
					"AgAAAC0YAAAAAAAALhgAAAAAAAAAAAAALhgAAAAAAAAvGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC0YAAAAAAAALRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13296,
					1,
					"left_delete",
					null,
					"AQAAAC4YAAAAAAAALhgAAAAAAAABAAAAbQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC8YAAAAAAAALxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13297,
					1,
					"insert",
					{
						"characters": "am"
					},
					"AgAAAC4YAAAAAAAALxgAAAAAAAAAAAAALxgAAAAAAAAwGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAC4YAAAAAAAALhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13298,
					1,
					"insert_completion",
					{
						"completion": "lambda",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "lambda"
					},
					"AgAAAC0YAAAAAAAALRgAAAAAAAADAAAAbGFtLRgAAAAAAAAzGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADAYAAAAAAAAMBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13299,
					1,
					"insert",
					{
						"characters": " d:"
					},
					"AwAAADMYAAAAAAAANBgAAAAAAAAAAAAANBgAAAAAAAA1GAAAAAAAAAAAAAA1GAAAAAAAADYYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADMYAAAAAAAAMxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13300,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAADYYAAAAAAAANxgAAAAAAAAAAAAANxgAAAAAAAA4GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADYYAAAAAAAANhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13301,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAADgYAAAAAAAAORgAAAAAAAAAAAAAORgAAAAAAAA6GAAAAAAAAAAAAAA6GAAAAAAAADsYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADgYAAAAAAAAOBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13302,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADsYAAAAAAAAPBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADsYAAAAAAAAOxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13303,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAADwYAAAAAAAAPRgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADwYAAAAAAAAPBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13304,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAD0YAAAAAAAAPhgAAAAAAAAAAAAAPhgAAAAAAAA/GAAAAAAAAAAAAAA/GAAAAAAAAEAYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0YAAAAAAAAPRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13305,
					1,
					"insert",
					{
						"characters": " dir"
					},
					"BAAAAEAYAAAAAAAAQRgAAAAAAAAAAAAAQRgAAAAAAABCGAAAAAAAAAAAAABCGAAAAAAAAEMYAAAAAAAAAAAAAEMYAAAAAAAARBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEAYAAAAAAAAQBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13306,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAEQYAAAAAAAARRgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQYAAAAAAAARBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13308,
					1,
					"insert_completion",
					{
						"completion": "direction",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "direction"
					},
					"AgAAAEEYAAAAAAAAQRgAAAAAAAAEAAAAZGlyZUEYAAAAAAAAShgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEUYAAAAAAAARRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13309,
					1,
					"insert",
					{
						"characters": " els"
					},
					"BAAAAEoYAAAAAAAASxgAAAAAAAAAAAAASxgAAAAAAABMGAAAAAAAAAAAAABMGAAAAAAAAE0YAAAAAAAAAAAAAE0YAAAAAAAAThgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEoYAAAAAAAAShgAAAAAAAAAAAAAAADwvw"
				],
				[
					13310,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAE4YAAAAAAAATxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE4YAAAAAAAAThgAAAAAAAAAAAAAAADwvw"
				],
				[
					13311,
					1,
					"insert",
					{
						"characters": " 1"
					},
					"AgAAAE8YAAAAAAAAUBgAAAAAAAAAAAAAUBgAAAAAAABRGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAE8YAAAAAAAATxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13314,
					1,
					"left_delete",
					null,
					"AQAAAD4YAAAAAAAAPhgAAAAAAAABAAAAPQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD8YAAAAAAAAPxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13315,
					1,
					"insert",
					{
						"characters": "!"
					},
					"AQAAAD4YAAAAAAAAPxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD4YAAAAAAAAPhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13343,
					1,
					"insert",
					{
						"characters": "iter("
					},
					"BQAAAMQWAAAAAAAAxRYAAAAAAAAAAAAAxRYAAAAAAADGFgAAAAAAAAAAAADGFgAAAAAAAMcWAAAAAAAAAAAAAMcWAAAAAAAAyBYAAAAAAAAAAAAAyBYAAAAAAADJFgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQWAAAAAAAAxBYAAAAAAAAAAAAAAADwvw"
				],
				[
					13346,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAALIXAAAAAAAAsxcAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALIXAAAAAAAAshcAAAAAAAAAAAAAAOBxQA"
				],
				[
					13349,
					1,
					"black_file",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAALMXAAAAAAAAsxcAAAAAAAAAAAAAAADwvw"
				],
				[
					13359,
					1,
					"insert",
					{
						"characters": "ne"
					},
					"AwAAAMQWAAAAAAAAxRYAAAAAAAAAAAAAxRYAAAAAAADFFgAAAAAAAAQAAABpdGVyxRYAAAAAAADGFgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQWAAAAAAAAyBYAAAAAAAAAAAAAAADwvw"
				],
				[
					13360,
					2,
					"left_delete",
					null,
					"AgAAAMUWAAAAAAAAxRYAAAAAAAABAAAAZcQWAAAAAAAAxBYAAAAAAAABAAAAbg",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMYWAAAAAAAAxhYAAAAAAAAAAAAAAADwvw"
				],
				[
					13361,
					1,
					"insert",
					{
						"characters": "list"
					},
					"BAAAAMQWAAAAAAAAxRYAAAAAAAAAAAAAxRYAAAAAAADGFgAAAAAAAAAAAADGFgAAAAAAAMcWAAAAAAAAAAAAAMcWAAAAAAAAyBYAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAMQWAAAAAAAAxBYAAAAAAAAAAAAAAADwvw"
				],
				[
					13369,
					1,
					"swap_line_up",
					null,
					"AgAAADUYAAAAAAAANRgAAAAAAABSAAAAICAgICAgICBkaXJlY3Rpb25zID0gc29ydGVkKGRpcmVjdGlvbnMsIGtleT1sYW1iZGEgZDogMCBpZiBkICE9IGRpcmVjdGlvbiBlbHNlIDEpCuMXAAAAAAAANRgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYYAAAAAAAAhhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13390,
					1,
					"left_delete",
					null,
					"AQAAAHQBAAAAAAAAdAEAAAAAAAABAAAAMA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUBAAAAAAAAdQEAAAAAAAAAAAAAAADwvw"
				],
				[
					13398,
					1,
					"insert",
					{
						"characters": " +"
					},
					"AgAAAIQYAAAAAAAAhRgAAAAAAAAAAAAAhRgAAAAAAACGGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIQYAAAAAAAAhBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13399,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYYAAAAAAAAhxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAIYYAAAAAAAAhhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13404,
					1,
					"left_delete",
					null,
					"AQAAABgYAAAAAAAAGBgAAAAAAAAaAAAAMCBpZiBkICE9IGRpcmVjdGlvbiBlbHNlIDE",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgYAAAAAAAAMhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13407,
					2,
					"left_delete",
					null,
					"AgAAAGsYAAAAAAAAaxgAAAAAAAABAAAAK2oYAAAAAAAAahgAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGwYAAAAAAAAbBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13408,
					1,
					"right_delete",
					null,
					"AQAAAGoYAAAAAAAAahgAAAAAAAABAAAAIA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoYAAAAAAAAahgAAAAAAAAAAAAAAADwvw"
				],
				[
					13418,
					1,
					"paste",
					null,
					"AQAAABgYAAAAAAAAMhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAABgYAAAAAAAAGBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13430,
					1,
					"insert",
					{
						"characters": "ire"
					},
					"AwAAADEYAAAAAAAAMhgAAAAAAAAAAAAAMhgAAAAAAAAzGAAAAAAAAAAAAAAzGAAAAAAAADQYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADEYAAAAAAAAMRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13432,
					1,
					"insert_completion",
					{
						"completion": "direction",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "direction"
					},
					"AgAAADAYAAAAAAAAMBgAAAAAAAAEAAAAZGlyZTAYAAAAAAAAORgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADQYAAAAAAAANBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13433,
					1,
					"insert",
					{
						"characters": ".opp"
					},
					"BAAAADkYAAAAAAAAOhgAAAAAAAAAAAAAOhgAAAAAAAA7GAAAAAAAAAAAAAA7GAAAAAAAADwYAAAAAAAAAAAAADwYAAAAAAAAPRgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAADkYAAAAAAAAORgAAAAAAAAAAAAAAADwvw"
				],
				[
					13434,
					1,
					"insert_completion",
					{
						"completion": "opposite",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "opposite"
					},
					"AgAAADoYAAAAAAAAOhgAAAAAAAADAAAAb3BwOhgAAAAAAABCGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAD0YAAAAAAAAPRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13435,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAEIYAAAAAAAAQxgAAAAAAAAAAAAAQxgAAAAAAABEGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIYAAAAAAAAQhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13438,
					1,
					"black_file",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEQYAAAAAAAARBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13442,
					1,
					"insert",
					{
						"characters": " <"
					},
					"AgAAAFEYAAAAAAAAUhgAAAAAAAAAAAAAUhgAAAAAAABTGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEYAAAAAAAAURgAAAAAAAAAAAAAAADwvw"
				],
				[
					13443,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFMYAAAAAAAAVBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFMYAAAAAAAAUxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13446,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAACUYAAAAAAAAJhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACUYAAAAAAAAJRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13447,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAACYYAAAAAAAAJxgAAAAAAAAAAAAAJxgAAAAAAAAoGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACYYAAAAAAAAJhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13448,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAACgYAAAAAAAAKRgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACgYAAAAAAAAKBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13449,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACkYAAAAAAAAKhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAACkYAAAAAAAAKRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13455,
					1,
					"paste",
					null,
					"AQAAAFkYAAAAAAAAahgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkYAAAAAAAAWRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13456,
					1,
					"insert",
					{
						"characters": "start"
					},
					"BQAAAGoYAAAAAAAAaxgAAAAAAAAAAAAAaxgAAAAAAABsGAAAAAAAAAAAAABsGAAAAAAAAG0YAAAAAAAAAAAAAG0YAAAAAAAAbhgAAAAAAAAAAAAAbhgAAAAAAABvGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAGoYAAAAAAAAahgAAAAAAAAAAAAAAADwvw"
				],
				[
					13457,
					1,
					"insert",
					{
						"characters": "()"
					},
					"AgAAAG8YAAAAAAAAcBgAAAAAAAAAAAAAcBgAAAAAAABxGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8YAAAAAAAAbxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13458,
					2,
					"left_delete",
					null,
					"AgAAAHAYAAAAAAAAcBgAAAAAAAABAAAAKW8YAAAAAAAAbxgAAAAAAAABAAAAKA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHEYAAAAAAAAcRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13459,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAG8YAAAAAAAAcBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAG8YAAAAAAAAbxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13470,
					1,
					"insert",
					{
						"characters": " else"
					},
					"BQAAAHAYAAAAAAAAcRgAAAAAAAAAAAAAcRgAAAAAAAByGAAAAAAAAAAAAAByGAAAAAAAAHMYAAAAAAAAAAAAAHMYAAAAAAAAdBgAAAAAAAAAAAAAdBgAAAAAAAB1GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHAYAAAAAAAAcBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13471,
					1,
					"insert",
					{
						"characters": " 0"
					},
					"AgAAAHUYAAAAAAAAdhgAAAAAAAAAAAAAdhgAAAAAAAB3GAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUYAAAAAAAAdRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13484,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFYYAAAAAAAAVxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYYAAAAAAAAVhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13491,
					1,
					"left_delete",
					null,
					"AQAAAHgYAAAAAAAAeBgAAAAAAAABAAAAKQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHkYAAAAAAAAeRgAAAAAAAAAAAAAAADwvw"
				],
				[
					13494,
					1,
					"black_file",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHgYAAAAAAAAeBgAAAAAAAAAAAAAAADwvw"
				],
				[
					13498,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAEIYAAAAAAAAQxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIYAAAAAAAAQhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13499,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAEMYAAAAAAAARBgAAAAAAAAAAAAARBgAAAAAAABFGAAAAAAAAAAAAABFGAAAAAAAAEYYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMYAAAAAAAAQxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13500,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEYYAAAAAAAARxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYYAAAAAAAARhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13501,
					1,
					"insert",
					{
						"characters": "dire"
					},
					"BAAAAEcYAAAAAAAASBgAAAAAAAAAAAAASBgAAAAAAABJGAAAAAAAAAAAAABJGAAAAAAAAEoYAAAAAAAAAAAAAEoYAAAAAAAASxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEcYAAAAAAAARxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13502,
					9,
					"left_delete",
					null,
					"CQAAAEoYAAAAAAAAShgAAAAAAAABAAAAZUkYAAAAAAAASRgAAAAAAAABAAAAckgYAAAAAAAASBgAAAAAAAABAAAAaUcYAAAAAAAARxgAAAAAAAABAAAAZEYYAAAAAAAARhgAAAAAAAABAAAAIEUYAAAAAAAARRgAAAAAAAABAAAAPUQYAAAAAAAARBgAAAAAAAABAAAAPUMYAAAAAAAAQxgAAAAAAAABAAAAIEIYAAAAAAAAQhgAAAAAAAABAAAAZA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsYAAAAAAAASxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13503,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAEIYAAAAAAAAQxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIYAAAAAAAAQhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13504,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAEMYAAAAAAAARBgAAAAAAAAAAAAARBgAAAAAAABFGAAAAAAAAAAAAABFGAAAAAAAAEYYAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEMYAAAAAAAAQxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13505,
					1,
					"insert",
					{
						"characters": " direction"
					},
					"CgAAAEYYAAAAAAAARxgAAAAAAAAAAAAARxgAAAAAAABIGAAAAAAAAAAAAABIGAAAAAAAAEkYAAAAAAAAAAAAAEkYAAAAAAAAShgAAAAAAAAAAAAAShgAAAAAAABLGAAAAAAAAAAAAABLGAAAAAAAAEwYAAAAAAAAAAAAAEwYAAAAAAAATRgAAAAAAAAAAAAATRgAAAAAAABOGAAAAAAAAAAAAABOGAAAAAAAAE8YAAAAAAAAAAAAAE8YAAAAAAAAUBgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEYYAAAAAAAARhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13507,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAEIYAAAAAAAAQxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEIYAAAAAAAAQhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13509,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAFEYAAAAAAAAUhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFEYAAAAAAAAURgAAAAAAAAAAAAAAADwvw"
				],
				[
					13510,
					1,
					"insert",
					{
						"characters": " and"
					},
					"BAAAAFIYAAAAAAAAUxgAAAAAAAAAAAAAUxgAAAAAAABUGAAAAAAAAAAAAABUGAAAAAAAAFUYAAAAAAAAAAAAAFUYAAAAAAAAVhgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFIYAAAAAAAAUhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13511,
					1,
					"insert",
					{
						"characters": " ("
					},
					"AgAAAFYYAAAAAAAAVxgAAAAAAAAAAAAAVxgAAAAAAABYGAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFYYAAAAAAAAVhgAAAAAAAAAAAAAAADwvw"
				],
				[
					13513,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAJ4YAAAAAAAAnxgAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ4YAAAAAAAAnhgAAAAAAAD////////vfw"
				],
				[
					13516,
					1,
					"black_file",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAJ8YAAAAAAAAnxgAAAAAAAAAAAAAAADwvw"
				],
				[
					13525,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BAAAAD4hAAAAAAAAQCEAAAAAAAAAAAAAASEAAAAAAAADIQAAAAAAAAAAAADEIAAAAAAAAMYgAAAAAAAAAAAAAKAgAAAAAAAAoiAAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAFkhAAAAAAAAnSAAAAAAAAAAAAAAAADwvw"
				],
				[
					13536,
					1,
					"insert",
					{
						"characters": "0"
					},
					"AQAAAHQBAAAAAAAAdQEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHQBAAAAAAAAdAEAAAAAAAAAAAAAAADwvw"
				],
				[
					13541,
					2,
					"left_delete",
					null,
					"AgAAAHQBAAAAAAAAdAEAAAAAAAABAAAAMHMBAAAAAAAAcwEAAAAAAAABAAAAMQ",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHUBAAAAAAAAdQEAAAAAAAAAAAAAAADwvw"
				],
				[
					13542,
					1,
					"insert",
					{
						"characters": "8"
					},
					"AQAAAHMBAAAAAAAAdAEAAAAAAAAAAAAA",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAHMBAAAAAAAAcwEAAAAAAAAAAAAAAADwvw"
				],
				[
					5,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAACoOAAAAAAAAKg4AAAAAAAACAAAAIyA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAA4DgAAAAAAADgOAAAAAAAAAAAAAAAA8L8"
				],
				[
					7,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAEsOAAAAAAAATQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABXDgAAAAAAAFcOAAAAAAAAAAAAAACAa0A"
				],
				[
					9,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAI8OAAAAAAAAkQ4AAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACdDgAAAAAAAJ0OAAAAAAAAAAAAAABAbkA"
				],
				[
					18,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"BAAAAEYhAAAAAAAARiEAAAAAAAACAAAAIyAHIQAAAAAAAAchAAAAAAAAAgAAACMgyCAAAAAAAADIIAAAAAAAAAIAAAAjIKIgAAAAAAAAoiAAAAAAAAACAAAAIyA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABjIQAAAAAAAKAgAAAAAAAAAAAAAAAA8L8"
				],
				[
					26,
					1,
					"left_delete",
					null,
					"AQAAAHMBAAAAAAAAcwEAAAAAAAABAAAAOA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAB0AQAAAAAAAHQBAAAAAAAAAAAAAAAA8L8"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": "1"
					},
					"AQAAAHMBAAAAAAAAdAEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABzAQAAAAAAAHMBAAAAAAAAAAAAAAAA8L8"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "80"
					},
					"AwAAAOEhAAAAAAAA4iEAAAAAAAAAAAAA4iEAAAAAAADiIQAAAAAAAAIAAAA0MOIhAAAAAAAA4yEAAAAAAAAAAAAA",
					"AgAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADhIQAAAAAAAOMhAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "Packages/User/build/Python 3 Operator Interference.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"sort",
				"Sort Lines"
			],
			[
				"kernel",
				"Helium: Start Kernel"
			],
			[
				"conn",
				"Helium: Connect Kernel"
			],
			[
				"kerne",
				"Helium: Connect Kernel"
			],
			[
				"helium set",
				"Helium: Settings"
			],
			[
				"ac",
				"Snippet: acronym"
			],
			[
				"sno notes",
				"Snippet: notes_new_section"
			],
			[
				"compar",
				"Compare with..."
			],
			[
				"con",
				"Helium: Connect Kernel"
			],
			[
				"snp sec",
				"Snippet: notes_new_section"
			],
			[
				"snp note",
				"Snippet: notes_new_section"
			],
			[
				"snp no",
				"Snippet: notes_new_section"
			],
			[
				"inter",
				"Helium: Interrupt Kernel"
			],
			[
				"kernel re",
				"Helium: Shutdown Kernel"
			],
			[
				"ss magi",
				"Set Syntax: MagicPython"
			],
			[
				"renam",
				"Rename File"
			],
			[
				"start",
				"Helium: Start Kernel"
			],
			[
				"snp ac",
				"Snippet: acronym"
			],
			[
				"kernel reset",
				"Helium: Restart Kernel"
			],
			[
				"kernel rest",
				"Helium: Restart Kernel"
			],
			[
				"sn acr",
				"Snippet: acronym"
			],
			[
				"acr",
				"Snippet: acronym"
			],
			[
				"kernel st",
				"Helium: Start Kernel"
			],
			[
				"notes",
				"Snippet: notes_new_section"
			],
			[
				"connn",
				"Helium: Connect Kernel"
			],
			[
				"ker",
				"Helium: Restart Kernel"
			],
			[
				"coo",
				"Code Folding: Fold"
			],
			[
				"snp notes",
				"Snippet: notes_new_section"
			],
			[
				"rest",
				"Helium: Restart Kernel"
			],
			[
				"debug",
				"Debugger: Install Adapters"
			],
			[
				"packa insta",
				"Package Control: Install Package"
			],
			[
				"sett he",
				"Helium: Settings"
			],
			[
				"helium sett",
				"Helium: Settings"
			],
			[
				"sn figure",
				"Snippet: figure"
			],
			[
				"keyb",
				"Preferences: Key Bindings"
			],
			[
				"hel c",
				"Helium: Connect Kernel"
			],
			[
				"pack control rem",
				"Package Control: Remove Package"
			],
			[
				"hel",
				"Helium: Settings"
			],
			[
				"snp figu",
				"Snippet: figure"
			],
			[
				"connec",
				"Helium: Connect Kernel"
			],
			[
				"kerl",
				"Helium: Shutdown Kernel"
			],
			[
				"kite",
				"Kite: Docs At Cursor"
			],
			[
				"sn fig\t\t\t",
				"Snippet: figure"
			],
			[
				"snp tabl",
				"Snippet: table"
			],
			[
				"snp fig",
				"Snippet: figure"
			],
			[
				"sn no",
				"Snippet: notes_new_section"
			],
			[
				"sn fig",
				"Snippet: figure"
			],
			[
				"sn",
				"Snippet: table"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"ss new se\t",
				"Snippet: notes_new_section"
			],
			[
				"ss new ",
				"Snippet: notes_new_section"
			],
			[
				"black",
				"Sublack: Format file"
			],
			[
				"aut",
				"Auto Wrap: Toggle"
			],
			[
				"wrap",
				"Auto Wrap: Toggle"
			],
			[
				"wo",
				"Word Wrap: Toggle"
			],
			[
				"keybin",
				"Preferences: Key Bindings"
			],
			[
				"build lat",
				"Build With: LaTeX - Script Builder"
			],
			[
				"mv",
				"File: Move"
			],
			[
				"ss bash",
				"Set Syntax: Bourne Again Shell (bash)"
			],
			[
				"is",
				"isort: sort imports"
			],
			[
				"iso",
				"isort: sort imports"
			],
			[
				"conne",
				"Helium: Connect Kernel"
			],
			[
				"isort",
				"isort: sort imports"
			],
			[
				"ss pyth",
				"Set Syntax: Python Extended"
			],
			[
				"compare",
				"Compare with..."
			],
			[
				"save as",
				"Project: Save As"
			],
			[
				"ki",
				"Kite: Docs At Cursor"
			],
			[
				"co",
				"Helium: Connect Kernel"
			],
			[
				"ss mark",
				"Set Syntax: Markdown"
			],
			[
				"sett",
				"Preferences: Settings"
			],
			[
				"wra",
				"Word Wrap: Toggle"
			],
			[
				"war",
				"Word Wrap: Toggle"
			],
			[
				"kern",
				"Helium: List Kernels"
			],
			[
				"kerne c",
				"Helium: Connect Kernel"
			],
			[
				"cheats",
				"Keymaps: Cheat Sheet"
			],
			[
				"coma",
				"Compare selections"
			],
			[
				"mark",
				"Mark selection for comparison"
			],
			[
				"select comp",
				"Mark selection for comparison"
			],
			[
				"comp",
				"Compare selections"
			],
			[
				"pack insta",
				"Package Control: Install Package"
			],
			[
				"menu",
				"View: Toggle Menu"
			],
			[
				"do",
				"Kite: Docs At Cursor"
			],
			[
				"extent",
				"LaTeXTools: Update document analysis cache"
			],
			[
				"settings",
				"Preferences: Settings"
			],
			[
				"connect",
				"Helium: Connect Kernel"
			],
			[
				"is sort",
				"Isort2: Sort Imports"
			],
			[
				"sett sort",
				"Isort2: Settings"
			],
			[
				"sett is",
				"Isort2: Settings"
			],
			[
				"is so",
				"Isort2: Sort Imports"
			],
			[
				"is sett",
				"Isort2: Settings"
			],
			[
				"isort set",
				"Isort2: Settings"
			],
			[
				"pack li",
				"Package Control: List Packages"
			],
			[
				"docs ki",
				"Kite: Docs At Cursor"
			],
			[
				"snp tr",
				"Snippet: Try/Except"
			],
			[
				"book",
				"Bookmarks: Toggle"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"hel sett",
				"Helium: Settings"
			],
			[
				"inspe",
				"Helium: Get Object Inspection"
			],
			[
				"ss mag",
				"Set Syntax: MagicPython"
			],
			[
				"hel set",
				"Helium: Settings"
			],
			[
				"hel se",
				"Helium: Settings"
			],
			[
				"helu",
				"Helium: Connect Kernel"
			],
			[
				"for",
				"Formatter: Beautify With Prettier"
			],
			[
				"form",
				"Formatter: Beautify With Prettier"
			],
			[
				"lint",
				"SublimeLinter: Lint This View"
			],
			[
				"ren",
				"Rename File"
			],
			[
				"helium se",
				"Helium: Settings"
			],
			[
				"helium",
				"Helium: Connect Kernel"
			],
			[
				"keyma",
				"Keymaps: Cheat Sheet"
			],
			[
				"pack rem",
				"Package Control: Remove Package"
			],
			[
				"heli",
				"Helium: Connect Kernel"
			],
			[
				"star",
				"Helium: Start Kernel"
			],
			[
				"sta",
				"Helium: Start Kernel"
			],
			[
				"st",
				"Helium: Start Kernel"
			],
			[
				"heli s",
				"Helium: Start Kernel"
			],
			[
				"heliu",
				"Helium: Connect Kernel"
			],
			[
				"helium star",
				"Helium: Start Kernel"
			],
			[
				"exe",
				"Helium: Execute Cell"
			],
			[
				"start he",
				"Helium: Start Kernel"
			],
			[
				"inspect",
				"Helium: Get Object Inspection"
			],
			[
				"heli st",
				"Helium: Start Kernel"
			],
			[
				"start ",
				"Helium: Start Kernel"
			],
			[
				"move",
				"File: Move"
			],
			[
				"open",
				"Kite: Open Copilot"
			],
			[
				"markdown ch",
				"Markdown Preview: Open Markdown Cheat sheet"
			],
			[
				"helim",
				"Helium: Connect Kernel"
			],
			[
				"helium c",
				"Helium: Connect Kernel"
			],
			[
				"keym",
				"Keymaps: Cheat Sheet"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 354.0,
		"history":
		[
			"import zmq",
			"view.run_command('show_scope_name')",
			"sublime.log_commands(False)",
			"sublime.log_commands(True)",
			"view.settings()",
			"view.settings",
			"import typing",
			"sublime.message_dialog('test')",
			"v.show_popup_menu(\"test\")",
			"v.show(1)",
			"v.show()",
			"v.show_popup(\"test\")",
			"v.show_popup()",
			"dir(v)",
			"v = window.create_output_panel('test')",
			"window.create_output_panel('test')",
			"view.create_output_panel('test')",
			"dir(sublime)",
			"dir()",
			"helium_execute_block",
			"view.style()[\"background\"]",
			"view.style()",
			"sublime.log_input(False)",
			"view.style",
			"sublime.log_input(True)",
			"%load_ext autoreload",
			"reload()",
			"img_size",
			"img_size = sublime.load_settings(\"Helium.sublime-settings\").get(\"image_size\", \"optimal\")",
			"img_size",
			"img_size = sublime.load_settings(\"Helium.sublime-settings\").get(\"image_size\", \"optimal\")",
			"sublime.load_settings(\"Helium.sublime-settings\").get(\"image_size\")",
			"sublime.load_settings(\"Helium.sublime-settings\")",
			"q",
			"view",
			"d",
			"u",
			"pdb.pm()",
			"import pdb",
			"view.query_phantom(ph)",
			"ph = view.add_phantom('test', sublime.Region(10,10), 'test', sublime.LAYOUT_BLOCK)",
			"view.query_phantom(ph)",
			"view.query_phantoms(ph)",
			"type(ph)",
			"ph",
			"ph = view.add_phantom('test', sublime.Region(0,0), 'test', sublime.LAYOUT_BLOCK)",
			"view.query_phantoms([1])",
			"view.query_phantom_by_id('1')",
			"view.query_phantom('1')",
			"view.query_phantom(1)",
			"view.add_phantom('test', sublime.Region(0,0), 'test', sublime.LAYOUT_BLOCK)",
			"ps.update([])",
			"ps.update()",
			"ps.phantoms[0].content",
			"ps.phantoms[0]",
			"ps.update([ph])",
			"ph.content = 'test2'",
			"ph.content",
			"ps.key",
			"dir(ps)",
			"ps.update([ph])",
			"ps = sublime.PhantomSet(view, 'test')",
			"dir(ph)",
			"ph",
			"ph = sublime.Phantom(sublime.Region(0, 0), 'test', sublime.LAYOUT_BLOCK)",
			"type(res[0])",
			"res = view.query_phantom(ph2)",
			"view.query_phantom(ph2)",
			"ph2",
			"type(ph2)",
			"ph2 = view.add_phantom('1', sublime.Region(0, 0), \"test\", sublime.LAYOUT_BLOCK)",
			"ph2 = view.add_phantom(1, sublime.Region(0, 0), \"test\", sublime.LAYOUT_BLOCK)",
			"ph2 = view.add_phantom(1, sublime.Region(0, 0), \"test\", sublime.LAYPUT_BLOCK)",
			"ph2 = view.add_phantom(1, view.Region(0, 0), \"test\", sublime.LAYPUT_BLOCK)",
			"view",
			"dir(ps)",
			"ph.on_navigate",
			"ph.id",
			"ps.update()",
			"ps.update([ph])",
			"ps = sublime.PhantomSet(view, 'test')",
			"dir(ph)",
			"ph",
			"ph = sublime.Phantom(sublime.Region(0, 0), 'test', sublime.LAYOUT_BLOCK)",
			"ph.on_navigate",
			"ph.on_navigate = 1",
			"ph.on_navigate is None",
			"ph.id",
			"ph",
			"ph = sublime.Phantom(sublime.Region(0, 0), \"\", sublime.LAYOUT_BLOCK)",
			"ph = sublime.Phantom(sublime.Region(0, 0), \"\")",
			"dir(view)",
			"[p for p in ps]",
			"dir(ps)",
			"ps",
			"ph.region",
			"ph.on_navigate",
			"dir(ph)",
			"ps",
			"ph",
			"ps.phantoms",
			"ps.phantoms()",
			"dir(ps)",
			"ps",
			"ph.region",
			"dir(ph)",
			"ph.id",
			"ps.update([ph])",
			"ps = sublime.PhantomSet(view, 'test')",
			"ph.id",
			"ph = sublime.Phantom(sublime.Region(0, 0), 'test', sublime.LAYOUT_BLOCK)",
			"ph = sublime.Phantom(sublime.Region(0, 0), '', sublime.LAYOUT_BLOCK)",
			"dir()",
			"reg == sublime.Region(12, 124)",
			"reg == reg",
			"reg",
			"region",
			"view.symbols()",
			"view.visible_region()",
			"view.file_name()",
			"view.file_nane()",
			"view.name()",
			"view.name",
			"[view.query_phantom(n) for n in range(100000) if view.query_phantom(n)[0] != sublime.Region(-1)]",
			"[view.query_phantom(n) for n in range(10000) if view.query_phantom(n)[0] != sublime.Region(-1)]",
			"[view.query_phantom(n) for n in range(1000)]",
			"[view.query_phantom(n) for n in range(10000) if view.query_phantom(n)[0] != sublime.Region(-1)]",
			"[view.query_phantom(n) for n in range(1000) if view.query_phantom(n)[0] != sublime.Region(-1)]"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/cgahr_mpi/coding/snake",
		"/home/cgahr_mpi/coding/snake/snake"
	],
	"file_history":
	[
		"/home/cgahr_mpi/coding/operator-inference/environment.yml",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/autoencoder.py",
		"/home/cgahr_mpi/coding/operator-inference/setup.cfg",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/hyperparameter_optimization.py",
		"/home/cgahr_mpi/coding/operator-inference/jupytext.toml",
		"/home/cgahr_mpi/coding/operator-inference/opinf/plot.py",
		"/home/cgahr_mpi/coding/operator-inference/scripts/hyperparams_results_evaluation.py",
		"/home/cgahr_mpi/coding/operator-inference/opinf/scripts/hyperparams.py",
		"/home/cgahr_mpi/coding/operator-inference/.pre-commit-config.yaml",
		"/home/cgahr_mpi/coding/operator-inference/pyproject.toml",
		"/home/cgahr_mpi/coding/arxiv_parser/test.py",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/hyperparams_results_evaluation.py",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/jupytext.toml",
		"/tmp/mozilla_cgahr_mpi0/opinf_vs_roi.py",
		"/tmp/mozilla_cgahr_mpi0/roi-1.py",
		"/home/cgahr_mpi/coding/operator-inference/opinf/utils.py",
		"/tmp/mozilla_cgahr_mpi0/roi.py",
		"/home/cgahr_mpi/coding/operator-inference/notebooks_convert/hyperparams_results_evaluation.py",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/main.tex",
		"/home/cgahr_mpi/coding/operator-inference/htmlcov/opinf_dtypes_py.html",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/helium_start.py",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/model_pipeline.py",
		"/home/cgahr_mpi/Dropbox/DnD/homebrew_items",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/diary.tex",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/notes.tex",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/bibliography.bib",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/lectures/computational_plasma_physics.tex",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/acronyms.tex",
		"/home/cgahr_mpi/notes/opInf.sublime-project",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/model_visualization.py",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/data_evaluation.py",
		"/home/cgahr_mpi/coding/operator-inference/data/burgersequation.py",
		"/home/cgahr_mpi/coding/operator-inference/src/evaluation.py",
		"/home/cgahr_mpi/coding/operator-inference/src/solver.py",
		"/home/cgahr_mpi/notes/help",
		"/home/cgahr_mpi/coding/operator-inference/data/burgersequation_2.py",
		"/home/cgahr_mpi/coding/operator-inference/data/burgersequation_periodic.py",
		"/home/cgahr_mpi/coding/operator-inference/src/plot.py",
		"/home/cgahr_mpi/notes/talks/2021_05_14_cgahr_hepp_talk/talk.tex",
		"/home/cgahr_mpi/notes/talks/2021_07_26_cgahr_TOK_meeting/talk.tex",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/notes.sty",
		"/home/cgahr_mpi/notes/notes/2021_03_18_pde/main.tex",
		"/home/cgahr_mpi/notes/talks/2021_07_26_cgahr_TOK_meeting/ippbeamer.cls",
		"/home/cgahr_mpi/.config/sublime-text/Packages/User/LaTeXTools.sublime-settings",
		"/home/cgahr_mpi/.config/sublime-text/Packages/LaTeXTools/LaTeXTools (Advanced).sublime-settings",
		"/home/cgahr_mpi/coding/operator-inference/data/burgers_pseudospectral.py",
		"/home/cgahr_mpi/Dropbox/Vorlesungen/SS21_CPP/06_1d_const_coeff_advection_spectral.py",
		"/home/cgahr_mpi/Dropbox/Vorlesungen/SS21_ROM/01_steady_parameterized_linear_pde.py",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/lectures/reduced_order_models.tex",
		"/home/cgahr_mpi/Dropbox/dotfiles/.zsh_functions",
		"/home/cgahr_mpi/.zshrc",
		"/home/cgahr_mpi/Dropbox/dotfiles/.zsh_aliases",
		"/home/cgahr_mpi/coding/operator-inference/data/burgersequation_periodic_1624337329.nc",
		"/home/cgahr_mpi/Dropbox/Vorlesungen/SS21_ROM/03_steady_parameterized_linear_pde.py",
		"/home/cgahr_mpi/.cache/sublime-text/Cache/LaTeXTools/internal/preview_math/8e098def1757c2db44f8b95ce3ba565f.png.err",
		"/home/cgahr_mpi/coding/reservoir_computing/thesis/tex/ch_echo_state_networks.tex",
		"/home/cgahr_mpi/coding/reservoir_computing/thesis/thesis.sty",
		"/home/cgahr_mpi/.config/sublime-text/Packages/User/snippets/notes_new_section.sublime-snippet",
		"/home/cgahr_mpi/.config/sublime-text/Packages/User/snippets/acronym.sublime-snippet",
		"/home/cgahr_mpi/Dropbox/Lebenslauf/lebenslauf_eng.tex",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/papers.tex",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/notes.aux",
		"/home/cgahr_mpi/.config/sublime-text/Packages/LaTeXTools/latex_cwl_completions.py",
		"/home/cgahr_mpi/coding/operator-inference/src/utils.py",
		"/home/cgahr_mpi/coding/operator-inference/src/opinf/pipeline.py",
		"/home/cgahr_mpi/coding/operator-inference/data/heatequation.py",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/heatequation.py",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/heatequation_2.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/09_particle_scheme_for_PIC_codes.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/02_mixed_boundary_conditions.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/08_1d_lagrange_fe.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/07_lagrange_basis_for_fe_discretization.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/03_poisson_fft.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/06_1d_const_coeff_advection_spectral.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/05_1d_const_coeff_advection.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/05_1d_const_coeff_advection_spectral.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/04_explicit_maxwell_solver.py",
		"/home/cgahr_mpi/.jupyter/jupyter_notebook_config.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/01_poisson_solver_1D.py",
		"/home/cgahr_mpi/coding/computational_plasma_physics/02_periodic_boundary_condition.py",
		"/home/cgahr_mpi/coding/Helium/helium.py",
		"/home/cgahr_mpi/coding/operator-inference/src/config.py",
		"/home/cgahr_mpi/.config/sublime-text/Packages/Helium/Default.sublime-keymap",
		"/home/cgahr_mpi/.config/sublime-text/Packages/Helium/dependencies.json",
		"/home/cgahr_mpi/coding/operator-inference/tests/src/test_config.py",
		"/home/cgahr_mpi/coding/operator-inference/src/opinf/opinf.py",
		"/home/cgahr_mpi/coding/operator-inference/data/tmp.py",
		"/home/cgahr_mpi/coding/operator-inference/tests/src/opinf/test_opinf.py",
		"/home/cgahr_mpi/coding/operator-inference/src/opinf/sobol.py",
		"/home/cgahr_mpi/coding/optuna/optuna/samplers/_lhs.py",
		"/home/cgahr_mpi/coding/optuna/optuna/samplers/_sobol.py",
		"/home/cgahr_mpi/coding/operator-inference/src/opinf/model_selection.py",
		"/home/cgahr_mpi/.config/joplin/tmp/c143f1c613304da2a60e50a88efcf728.md",
		"/home/cgahr_mpi/notes/notes.md",
		"/home/cgahr_mpi/.cache/.fr-qjxwEB/demo-bundle1.1/IPPbeamer.tex",
		"/tmp/mozilla_cgahr_mpi0/demo-bundle1_1/demo-bundle1.1/IPPbeamer.tex",
		"/tmp/mozilla_cgahr_mpi0/demo-bundle1_1/demo-bundle1.1/IPPposter.tex",
		"/home/cgahr_mpi/.cache/.fr-kYHxhA/demo-bundle1.1/IPPposter.tex",
		"/home/cgahr_mpi/.config/joplin/tmp/83e5e714faf84509833c92b9fbb4501c.md",
		"/home/cgahr_mpi/anaconda3/envs/opInf/lib/python3.9/site-packages/skopt/searchcv.py",
		"/home/cgahr_mpi/anaconda3/envs/opInf/lib/python3.9/site-packages/sklearn/base.py",
		"/home/cgahr_mpi/.config/joplin/tmp/4e51fae080d94ae48b1fcb0ba3e0df37.md",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/math_symbols.tex",
		"/home/cgahr_mpi/.config/joplin/tmp/cc9647ee359f4d93aa85b1ce54b52fe7.md",
		"/home/cgahr_mpi/coding/reservoir_computing/.gitignore",
		"/home/cgahr_mpi/coding/operator-inference.wiki/.gitignore",
		"/home/cgahr_mpi/.config/sublime-text-3/Packages/isort/README.md",
		"/home/cgahr_mpi/coding/reservoir_computing/thesis/tex/bibliography.bib",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/bibliography.tex",
		"/home/cgahr_mpi/.config/sublime-text-3/Packages/User/snippets/notes_new_section.sublime-snippet",
		"/home/cgahr_mpi/coding/reservoir_computing/thesis/tex/ch_results.tex",
		"/home/cgahr_mpi/coding/operator-inference/tests/src/test_plot.py",
		"/home/cgahr_mpi/coding/operator-inference/tests/src/conftest.py",
		"/home/cgahr_mpi/coding/operator-inference/tests/src/test_utils.py",
		"/home/cgahr_mpi/coding/operator-inference/src/conftest.py",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/results_burgers_OpinfPipeline_degree_2.csv",
		"/home/cgahr_mpi/coding/operator-inference/tests/conftest.py",
		"/tmp/mozilla_cgahr_mpi0/dflt_style_changes-2.py",
		"/tmp/mozilla_cgahr_mpi0/whats_new_2-0-0-1.py",
		"/home/cgahr_mpi/coding/reservoir_computing/thesis/tex/ch_architecture.tex",
		"/home/cgahr_mpi/coding/reservoir_computing/thesis/thesis.tex",
		"/home/cgahr_mpi/coding/operator-inference.wiki/latex/tex/title.tex",
		"/home/cgahr_mpi/coding/reservoir_computing/thesis/tex/fm_title.tex",
		"/home/cgahr_mpi/coding/reservoir_computing/thesis/tex/math_symbols.tex",
		"/home/cgahr_mpi/coding/reservoir_computing/thesis/tex/acronyms.tex",
		"/home/cgahr_mpi/coding/operator-inference/notebooks/results_burgers_OpinfPipeline_degree_1.csv",
		"/home/cgahr_mpi/notes/startup_script",
		"/home/cgahr_mpi/coding/operator-inference/tests/src/opinf/test_pipeline.py"
	],
	"find":
	{
		"height": 32.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"size",
			"field",
			"direction",
			"dirs",
			"enumerate",
			"print",
			"x",
			"pass",
			"get_neighbor_directions",
			"get_neighbor_direction",
			"pass",
			"x",
			"directions",
			"Optional",
			"pass",
			"Union",
			"field",
			"neighbors",
			"get_neighbors",
			"get_neighbor_direction",
			"neighbors",
			"directions",
			"it",
			"filter",
			"content_filter",
			"_apple",
			"pass",
			"QUIT",
			"text",
			"text_with_coords",
			"text",
			"textRect",
			"string",
			"coordy",
			"coordx",
			"event",
			"Arial",
			"GREY",
			"done",
			"frame",
			"snake",
			"field",
			"apple",
			"e",
			"96",
			"other",
			"not",
			"tuple",
			"move_stars",
			"rect",
			"pass",
			"pygame",
			"BOARD_SIZE",
			"_direction",
			"LostError",
			"pass",
			"self",
			"y",
			"self",
			"size",
			"reverse",
			"prepend",
			"type",
			"Field",
			"FieldContent",
			"def",
			"head",
			"pos",
			"direction",
			"pass",
			"batch",
			"train_ds",
			"data_shuffle",
			"z_key",
			"steps_per_epoch",
			"eval_rng",
			"data",
			"BATCH_SIZE",
			"LEARNING_RATE",
			"data",
			"y_batched",
			"variables",
			"conn",
			"username",
			"input",
			"provider",
			"Dict",
			"_get",
			"BASELINE",
			"prediction",
			"ERRORS",
			"key_slices",
			"indices",
			"[]",
			"test_end_idx",
			"1",
			"key",
			"ke",
			"error_dict",
			"ÔPINF",
			"600",
			"prediction",
			"Test",
			"Projection",
			"test",
			"ERRORS",
			"help",
			"errors",
			"concat",
			"parse_errors_from_hdf5",
			"path",
			"plot",
			"161",
			"RMSE",
			"rmse",
			"plt",
			"6",
			"projection",
			"DIMSTR",
			"None",
			"projection",
			"data",
			"projection",
			"total_energy",
			"DIMSTR",
			"precision",
			"ectrum",
			"Energy"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\\diff",
			"\\n",
			"",
			"\\rom{}",
			"_",
			"t",
			" - ",
			"^ - ",
			"    - ",
			"pipeline",
			"\\n",
			"%%",
			"",
			"\\n",
			" ",
			"",
			"#####\\1",
			"\\1",
			"assemble_regression_matrix",
			"**heat_equation, **f_g",
			"heat_equation",
			"TEMPORAL_GRID_SIZE",
			"INPUT_GRID_SIZE",
			"SPATIAL_GRID_SIZE",
			"",
			"\\mathrm{d} ",
			"\\mathrm{d}",
			"w"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "environment.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 95,
						"regions":
						{
						},
						"selection":
						[
							[
								95,
								95
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": "\\",
									"selector": "text.tex.latex"
								}
							],
							"lsp_uri": "file:///home/cgahr_mpi/coding/snake/environment.yml",
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "snake.sublime-project",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 47,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": "\\",
									"selector": "text.tex.latex"
								}
							],
							"lsp_uri": "file:///home/cgahr_mpi/coding/snake/snake.sublime-project",
							"syntax": "Packages/JSON/JSON.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "snake/main.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9233,
						"regions":
						{
						},
						"selection":
						[
							[
								8675,
								8675
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.python - string - comment - constant.numeric"
								},
								{
									"characters": "\\",
									"selector": "text.tex.latex"
								}
							],
							"lsp_uri": "file:///home/cgahr_mpi/coding/snake/snake/main.py",
							"syntax": "Packages/MagicPython/grammars/MagicPython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7004.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 32.0
	},
	"input":
	{
		"height": 52.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Debugger":
	{
		"height": 211.0
	},
	"output.Debugger: Console":
	{
		"height": 0.0
	},
	"output.Debugger: Protocol":
	{
		"height": 0.0
	},
	"output.SublimeLinter":
	{
		"height": 204.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 156.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "snake.sublime-project",
	"replace":
	{
		"height": 60.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"hyp",
				"operator-inference/notebooks/hyperparameter_optimization.py"
			],
			[
				"env",
				"operator-inference/environment.yml"
			],
			[
				"plot",
				"operator-inference/opinf/plot.py"
			],
			[
				"hyper",
				"operator-inference/opinf/scripts/hyperparams.py"
			],
			[
				"envi",
				"operator-inference/environment.yml"
			],
			[
				"hyper re",
				"operator-inference/notebooks/hyperparams_results_evaluation.py"
			],
			[
				"biblio",
				"operator-inference.wiki/latex/tex/bibliography.bib"
			],
			[
				"acro",
				"operator-inference.wiki/latex/tex/acronyms.tex"
			],
			[
				"diar",
				"operator-inference.wiki/latex/tex/diary.tex"
			],
			[
				"burgers2",
				"operator-inference/data/burgersequation_2.py"
			],
			[
				"sty",
				"operator-inference.wiki/latex/notes.sty"
			],
			[
				"dia",
				"operator-inference.wiki/latex/tex/diary.tex"
			],
			[
				"burger",
				"operator-inference/data/burgers_pseudospectral.py"
			],
			[
				"main.tex",
				"operator-inference.wiki/latex/main.tex"
			],
			[
				"main.te",
				"notes/notes/2021_03_18_pde/main.tex"
			],
			[
				"redu.tex",
				"operator-inference.wiki/latex/tex/lectures/reduced_order_models.tex"
			],
			[
				"note st",
				"operator-inference.wiki/latex/notes.sty"
			],
			[
				"notes.st",
				"operator-inference.wiki/latex/notes.sty"
			],
			[
				"acr",
				"operator-inference.wiki/latex/tex/acronyms.tex"
			],
			[
				"notes.te",
				"operator-inference.wiki/latex/tex/notes.tex"
			],
			[
				"paper.tex",
				"operator-inference.wiki/latex/tex/papers.tex"
			],
			[
				"notes.aux",
				"operator-inference.wiki/latex/tex/notes.aux"
			],
			[
				"notes st",
				"operator-inference.wiki/latex/notes.sty"
			],
			[
				"notes.s",
				"operator-inference.wiki/latex/notes.sty"
			],
			[
				".sty",
				"operator-inference.wiki/latex/notes.sty"
			],
			[
				"notes.tex",
				"operator-inference.wiki/latex/tex/notes.tex"
			],
			[
				"model",
				"operator-inference/notebooks/model_pipeline.py"
			],
			[
				"eval",
				"operator-inference/src/evaluation.py"
			],
			[
				"util",
				"operator-inference/src/utils.py"
			],
			[
				"ut",
				"operator-inference/src/utils.py"
			],
			[
				"conf",
				"operator-inference/src/config.py"
			],
			[
				"config",
				"operator-inference/tests/src/test_config.py"
			],
			[
				"mod",
				"operator-inference/notebooks/model_pipeline.py"
			],
			[
				"model p",
				"operator-inference/notebooks/model_pipeline.py"
			],
			[
				"",
				"operator-inference/src/opinf/model_selection.py"
			],
			[
				"solv",
				"operator-inference/src/solver.py"
			],
			[
				"opinf test",
				"operator-inference/tests/src/opinf/test_opinf.py"
			],
			[
				"opinf",
				"operator-inference/src/opinf/opinf.py"
			],
			[
				"tmp",
				"operator-inference/data/tmp.py"
			],
			[
				"en",
				"operator-inference/environment.yml"
			],
			[
				"pap",
				"operator-inference.wiki/latex/tex/papers.tex"
			],
			[
				"bib",
				"operator-inference.wiki/latex/tex/bibliography.bib"
			],
			[
				"bibli",
				"operator-inference.wiki/latex/tex/bibliography.tex"
			],
			[
				"burg",
				"operator-inference/data/burgersequation.py"
			],
			[
				"solver",
				"operator-inference/src/solver.py"
			],
			[
				"opin",
				"operator-inference/src/opinf/opinf.py"
			],
			[
				"pipe",
				"operator-inference/src/opinf/pipeline.py"
			],
			[
				"test opinf",
				"operator-inference/tests/src/opinf/test_opinf.py"
			],
			[
				"testu",
				"operator-inference/tests/src/test_utils.py"
			],
			[
				"conftest",
				"operator-inference/tests/src/conftest.py"
			],
			[
				"test plot",
				"operator-inference/tests/src/test_plot.py"
			],
			[
				"mode",
				"operator-inference/notebooks/model_pipeline.py"
			],
			[
				"moed",
				"operator-inference/notebooks/model_pipeline.py"
			],
			[
				"notes.t",
				"operator-inference.wiki/latex/tex/notes.tex"
			],
			[
				"math s",
				"operator-inference.wiki/latex/tex/math_symbols.tex"
			],
			[
				"pipe.",
				"operator-inference/src/opinf/pipeline.py"
			],
			[
				"model\t",
				"operator-inference/notebooks/model_pipeline.py"
			],
			[
				"test_pip",
				"operator-inference/tests/src/opinf/test_pipeline.py"
			],
			[
				"init",
				"operator-inference/src/opinf/__init__.py"
			],
			[
				"test pip",
				"operator-inference/tests/src/opinf/test_pipeline.py"
			],
			[
				"test pipe",
				"operator-inference/tests/src/opinf/test_pipeline.py"
			],
			[
				"opi",
				"operator-inference/src/opinf/opinf.py"
			],
			[
				"op",
				"operator-inference/src/opinf/opinf.py"
			],
			[
				"heat",
				"operator-inference/data/heatequation.py"
			],
			[
				"test heat",
				"operator-inference/tests/data/test_heatequation.py"
			],
			[
				"test op",
				"operator-inference/tests/src/opinf/test_opinf.py"
			],
			[
				"pipel",
				"operator-inference/src/opinf/pipeline.py"
			],
			[
				"bur",
				"operator-inference/data/burgersequation.py"
			],
			[
				"cfg",
				"operator-inference/setup.cfg"
			],
			[
				"test solv",
				"operator-inference/tests/src/test_solver.py"
			],
			[
				"test he",
				"operator-inference/tests/data/test_heatequation.py"
			],
			[
				"test",
				"operator-inference/tests/src/test_solver.py"
			],
			[
				"pl tes",
				"operator-inference/tests/src/test_plot.py"
			],
			[
				"test d",
				"operator-inference/tests/src/opinf/test_dimension_reduction.py"
			],
			[
				"config test",
				"operator-inference/tests/src/test_config.py"
			],
			[
				"test dim",
				"operator-inference/tests/src/opinf/test_dimension_reduction.py"
			],
			[
				"test solver",
				"operator-inference/tests/src/test_solver.py"
			],
			[
				"test_s",
				"operator-inference/tests/src/test_solver.py"
			],
			[
				"test_op",
				"operator-inference/tests/src/test_solver.py"
			],
			[
				"test_",
				"operator-inference/tests/src/test_config.py"
			],
			[
				"d",
				"operator-inference/src/opinf/dimension_reduction.py"
			],
			[
				"dimen",
				"operator-inference/src/opinf/dimension_reduction.py"
			],
			[
				"testhea",
				"operator-inference/tests/data/test_heatequation.py"
			],
			[
				"sol",
				"operator-inference/src/solver.py"
			],
			[
				"conft",
				"operator-inference/tests/conftest.py"
			],
			[
				"test sol",
				"operator-inference/tests/src/test_solver.py"
			],
			[
				".giti",
				"operator-inference/.gitignore"
			],
			[
				"test dim py",
				"operator-inference/tests/src/opinf/test_dimension_reduction.py"
			],
			[
				"test plo",
				"operator-inference/tests/src/test_plot.py"
			],
			[
				"burge",
				"operator-inference/tests/data/test_burgersequation.py"
			],
			[
				"test equ",
				"operator-inference/tests/data/test_heatequation.py"
			],
			[
				"testdata",
				"operator-inference/.mypy_cache/3.8/test_burgersequation.data.json"
			],
			[
				"re",
				"operator-inference.wiki/References.md"
			],
			[
				"test con",
				"operator-inference/tests/src/test_config.py"
			],
			[
				"test_p",
				"operator-inference/tests/src/test_plot.py"
			],
			[
				"plo",
				"operator-inference/src/plot.py"
			],
			[
				"uti",
				"operator-inference/src/utils.py"
			],
			[
				"test ut",
				"operator-inference/tests/src/test_utils.py"
			],
			[
				"test_pl",
				"operator-inference/tests/src/test_plot.py"
			],
			[
				"plot.p",
				"operator-inference/src/plot.py"
			],
			[
				"read",
				"operator-inference/README.md"
			],
			[
				"testplot",
				"operator-inference/tests/src/test_plot.py"
			],
			[
				"set",
				"operator-inference/setup.cfg"
			],
			[
				"confi",
				"operator-inference/src/config.py"
			],
			[
				"test dimn",
				"operator-inference/tests/src/opinf/test_dimension_reduction.py"
			],
			[
				"dim re",
				"operator-inference/src/opinf/dimension_reduction.py"
			],
			[
				"tes tplo",
				"operator-inference/tests/src/test_plot.py"
			],
			[
				"test_b",
				"operator-inference/tests/data/test_burgersequation.py"
			],
			[
				"dimenre",
				"operator-inference/src/opinf/dimension_reduction.py"
			],
			[
				"dim",
				"operator-inference/src/opinf/dimensionality_reduction.py"
			],
			[
				"test util",
				"operator-inference/tests/src/test_utils.py"
			],
			[
				"hea",
				"operator-inference/data/heatequation.py"
			],
			[
				"pre comm",
				"operator-inference/.pre-commit-config.yaml"
			],
			[
				"test i",
				"operator-inference/tests/src/test_utils.py"
			],
			[
				"exa",
				"operator-inference/scripts/example.py"
			],
			[
				"resea",
				"notes/research.md"
			],
			[
				"notes",
				"notes/notes.md"
			],
			[
				"envym",
				"operator-inference/environment.yml"
			],
			[
				"wiki ref",
				"operator-inference.wiki/References.md"
			],
			[
				"wiki res",
				"operator-inference.wiki/Results.md"
			],
			[
				"wiki ho",
				"operator-inference.wiki/Home.md"
			],
			[
				"wiki",
				"operator-inference.wiki/Theory.md"
			],
			[
				"wiki home",
				"operator-inference.wiki/Home.md"
			],
			[
				"pack",
				"operator-inference/package-lock.json"
			],
			[
				"test_o",
				"operator-inference/tests/opInf/test_opinf.py"
			],
			[
				"pyt",
				"reservoir_computing/pytest.ini"
			],
			[
				"py",
				"reservoir_computing/pytest.ini"
			],
			[
				".cfg",
				"operator-inference/setup.cfg"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/notes/opInf.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 299.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
